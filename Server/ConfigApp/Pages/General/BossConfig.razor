@page "/bossconfig"
@inherits LayoutComponentBase
@using static Core.DataLoader;

<style>
    .mud-divider {
    border-width: 2.5px;
    }
</style>

<MudMainContent>
    <MudContainer Class="mb-20">
        <MudTabs Centered="true" Elevation="0" Rounded="true" ApplyEffectsToContainer="false" SliderAnimation Style="line-height:4">
            <MudExpansionPanels MultiExpansion="true">
                <MudTabPanel Text="General">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Text="Difficulty Settings" Expanded=true>
                        <MudGrid>

                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Weight of Boss Difficulty. Lower is less common, higher is more common." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Easy Difficulty Weight</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_boss_EasyDifficulty</MudButton>
                            </MudItem>
                            <MudItem xs="5">
                                <MudSlider @bind-Value="_boss_EasyDifficulty" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_boss_EasyDifficulty"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Boss_Easy" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _boss_EasyDifficulty != 0)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Boss_Easy" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>

                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Weight of Boss Difficulty. Lower is less common, higher is more common." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Normal Difficulty Weight</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_boss_NormalDifficulty</MudButton>
                            </MudItem>
                            <MudItem xs="5">
                                <MudSlider Style="margin-top: -20px;" @bind-Value="_boss_NormalDifficulty" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_boss_NormalDifficulty"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Boss_Normal" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _boss_NormalDifficulty != 60)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Boss_Normal" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>

                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Weight of Boss Difficulty. Lower is less common, higher is more common." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Hard Difficulty Weight</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_boss_HardDifficulty</MudButton>
                            </MudItem>
                            <MudItem xs="5">
                                <MudSlider @bind-Value="_boss_HardDifficulty" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_boss_HardDifficulty"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Boss_Hard" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _boss_HardDifficulty != 30)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Boss_Hard" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>

                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Weight of Boss Difficulty. Lower is less common, higher is more common." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Impossible Difficulty Weight</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_boss_ImpossibleDifficulty</MudButton>
                            </MudItem>
                            <MudItem xs="5">
                                <MudSlider @bind-Value="_boss_ImpossibleDifficulty" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_boss_ImpossibleDifficulty"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Boss_Impossible" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _boss_ImpossibleDifficulty != 10)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Boss_Impossible" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                </MudTabPanel>
                <MudTabPanel Text="Goons">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Goons to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Goons</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_goons_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_goons_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _goons_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_goons_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Text="General" Expanded=true>
                            <MudGrid>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider/>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Customs_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                        MultiSelection="true"
                                        SelectedValues="_goons_Customs_SpawnZones"
                                        SelectedValuesChanged="On_Goons_Customs_SpawnZonesChanged"
                                        Variant="Variant.Filled"
                                        AnchorOrigin="Origin.CenterLeft"
                                        Dense Clearable ShrinkLabel
                                        Disabled="_goons_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                    MainLayout.pendingChanges.Contains("_goons_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Customs_SpawnZones.Count != 1 ||
                                    !_goons_Customs_SpawnZones.Contains("ZoneScavBase") ||
                                    _goons_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider/>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_goons_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                        MultiSelection="true"
                                        SelectedValues="_goons_FactoryDay_SpawnZones"
                                        SelectedValuesChanged="On_Goons_FactoryDay_SpawnZonesChanged"
                                        Variant="Variant.Filled"
                                        AnchorOrigin="Origin.CenterLeft"
                                        Dense Clearable ShrinkLabel
                                        Disabled="_goons_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle && 
                                    MainLayout.pendingChanges.Contains("_goons_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_FactoryDay_SpawnZones.Count != 1 ||
                                    !_goons_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_FactoryNight_SpawnZones.Count != 1 ||
                                    !_goons_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Interchange_SpawnZones.Count != 1 ||
                                    !_goons_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_goons_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Lighthouse_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Lighthouse_SpawnZones.Count != 2 ||
                                    _goons_Lighthouse_SpawnZones.Contains(string.Empty) ||
                                    !_goons_Lighthouse_SpawnZones.Contains("Zone_TreatmentContainers") ||
                                    !_goons_Lighthouse_SpawnZones.Contains("Zone_Chalet"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Reserve_SpawnZones.Count != 1 ||
                                    !_goons_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_GroundZero_SpawnZones.Count != 1 ||
                                    !_goons_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_goons_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Shoreline_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Shoreline_SpawnZones.Count != 1 ||
                                    !_goons_Shoreline_SpawnZones.Contains("ZoneMeteoStation"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Streets_SpawnZones.Count != 1 ||
                                    !_goons_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_goons_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_goons_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_goons_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                        _goons_Woods_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_goons_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Goons_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_goons_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_goons_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Goons_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _goons_Woods_SpawnZones.Count != 1 ||
                                    !_goons_Woods_SpawnZones.Contains("ZoneScavBase2"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Goons_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Reshala">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Reshala to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Reshala</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_reshala_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_reshala_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_reshala_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _reshala_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_reshala_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_reshala_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Customs_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Customs_SpawnZones.Count != 3 ||
                                    !_reshala_Customs_SpawnZones.Contains("ZoneDormitory") ||
                                    !_reshala_Customs_SpawnZones.Contains("ZoneGasStation") ||
                                    !_reshala_Customs_SpawnZones.Contains("ZoneScavBase") ||
                                    _reshala_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_FactoryDay_SpawnZones.Count != 1 ||
                                    !_reshala_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_FactoryNight_SpawnZones.Count != 1 ||
                                    !_reshala_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Interchange_SpawnZones.Count != 1 ||
                                    !_reshala_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_reshala_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Lighthouse_SpawnZones.Count != 1 ||
                                    !_reshala_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Reserve_SpawnZones.Count != 1 ||
                                    !_reshala_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_GroundZero_SpawnZones.Count != 1 ||
                                    !_reshala_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_reshala_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Shoreline_SpawnZones.Count != 1 ||
                                    !_reshala_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Streets_SpawnZones.Count != 1 ||
                                    !_reshala_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" >@_reshala_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_reshala_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"  />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_reshala_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Reshala_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_reshala_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_reshala_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Reshala_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _reshala_Woods_SpawnZones.Count != 1 ||
                                    !_reshala_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Reshala_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Tagilla">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Tagilla to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Tagilla</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_tagilla_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_tagilla_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_tagilla_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _tagilla_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_tagilla_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Customs_SpawnZones.Count != 1 ||
                                    !_tagilla_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium"/>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_FactoryDay_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_FactoryDay_SpawnZones.Count != 1 ||
                                    !_tagilla_FactoryDay_SpawnZones.Contains("BotZone"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_FactoryNight_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_FactoryNight_SpawnZones.Count != 1 ||
                                    !_tagilla_FactoryNight_SpawnZones.Contains("BotZone"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Interchange_SpawnZones.Count != 1 ||
                                    !_tagilla_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_tagilla_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Lighthouse_SpawnZones.Count != 1 ||
                                    !_tagilla_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Reserve_SpawnZones.Count != 1 ||
                                    !_tagilla_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_GroundZero_SpawnZones.Count != 1 ||
                                    !_tagilla_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_tagilla_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Shoreline_SpawnZones.Count != 1 ||
                                    !_tagilla_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Streets_SpawnZones.Count != 1 ||
                                    !_tagilla_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_tagilla_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_tagilla_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_tagilla_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Tagilla_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_tagilla_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_tagilla_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Tagilla_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _tagilla_Woods_SpawnZones.Count != 1 ||
                                    !_tagilla_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Tagilla_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Killa">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Killa to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Killa</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_killa_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_killa_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_killa_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _killa_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_killa_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Customs_SpawnZones.Count != 1 ||
                                    !_killa_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_FactoryDay_SpawnZones.Count != 1 ||
                                    !_killa_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_FactoryNight_SpawnZones.Count != 1 ||
                                    !_killa_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Interchange_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Interchange_SpawnZones.Count != 5 ||
                                    !_killa_Interchange_SpawnZones.Contains("ZoneCenterBot") ||
                                    !_killa_Interchange_SpawnZones.Contains("ZoneCenter") ||
                                    !_killa_Interchange_SpawnZones.Contains("ZoneOLI") ||
                                    !_killa_Interchange_SpawnZones.Contains("ZoneIDEA") ||
                                    !_killa_Interchange_SpawnZones.Contains("ZoneGoshan"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_killa_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Lighthouse_SpawnZones.Count != 1 ||
                                    !_killa_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Reserve_SpawnZones.Count != 1 ||
                                    !_killa_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_GroundZero_SpawnZones.Count != 1 ||
                                    !_killa_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_killa_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Shoreline_SpawnZones.Count != 1 ||
                                    !_killa_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Streets_SpawnZones.Count != 1 ||
                                    !_killa_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_killa_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_killa_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_killa_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Killa_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_killa_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_killa_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Killa_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _killa_Woods_SpawnZones.Count != 1 ||
                                    !_killa_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Killa_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Zryachiy">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Zryachiy to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Zryachiy</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_zryachiy_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_zryachiy_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_zryachiy_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _zryachiy_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_zryachiy_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Customs_SpawnZones.Count != 1 ||
                                    !_zryachiy_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_FactoryDay_SpawnZones.Count != 1 ||
                                    !_zryachiy_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_FactoryNight_SpawnZones.Count != 1 ||
                                    !_zryachiy_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Interchange_SpawnZones.Count != 1 ||
                                    !_zryachiy_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_zryachiy_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Lighthouse_SpawnChance != 100)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Lighthouse_SpawnZones.Count != 1 ||
                                    !_zryachiy_Lighthouse_SpawnZones.Contains("Zone_Island"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Reserve_SpawnZones.Count != 1 ||
                                    !_zryachiy_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_GroundZero_SpawnZones.Count != 1 ||
                                    !_zryachiy_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_zryachiy_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Shoreline_SpawnZones.Count != 1 ||
                                    !_zryachiy_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Streets_SpawnZones.Count != 1 ||
                                    !_zryachiy_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_zryachiy_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_zryachiy_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_zryachiy_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Zryachiy_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_zryachiy_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_zryachiy_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Zryachiy_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _zryachiy_Woods_SpawnZones.Count != 1 ||
                                    !_zryachiy_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Zryachiy_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Glukhar">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Glukhar to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Glukhar</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_glukhar_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_glukhar_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_glukhar_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _glukhar_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_glukhar_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Customs_SpawnZones.Count != 1 ||
                                    !_glukhar_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_FactoryDay_SpawnZones.Count != 1 ||
                                    !_glukhar_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_FactoryNight_SpawnZones.Count != 1 ||
                                    !_glukhar_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Interchange_SpawnZones.Count != 1 ||
                                    !_glukhar_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_glukhar_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Lighthouse_SpawnZones.Count != 1 ||
                                    !_glukhar_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Reserve_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Reserve_SpawnZones.Count != 4 ||
                                    !_glukhar_Reserve_SpawnZones.Contains("ZoneRailStrorage") ||
                                    !_glukhar_Reserve_SpawnZones.Contains("ZonePTOR2") ||
                                    !_glukhar_Reserve_SpawnZones.Contains("ZoneBarrack") ||
                                    !_glukhar_Reserve_SpawnZones.Contains("ZoneSubStorage"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_GroundZero_SpawnZones.Count != 1 ||
                                    !_glukhar_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_glukhar_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Shoreline_SpawnZones.Count != 1 ||
                                    !_glukhar_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Streets_SpawnZones.Count != 1 ||
                                    !_glukhar_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_glukhar_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_glukhar_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_glukhar_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Glukhar_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_glukhar_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_glukhar_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Glukhar_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _glukhar_Woods_SpawnZones.Count != 1 ||
                                    !_glukhar_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Glukhar_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Sanitar">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Sanitar to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Sanitar</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_sanitar_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_sanitar_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_sanitar_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _sanitar_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_sanitar_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Customs_SpawnZones.Count != 1 ||
                                    !_sanitar_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_FactoryDay_SpawnZones.Count != 1 ||
                                    !_sanitar_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_FactoryNight_SpawnZones.Count != 1 ||
                                    !_sanitar_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Interchange_SpawnZones.Count != 1 ||
                                    !_sanitar_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_sanitar_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Lighthouse_SpawnZones.Count != 1 ||
                                    !_sanitar_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Reserve_SpawnZones.Count != 1 ||
                                    !_sanitar_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_GroundZero_SpawnZones.Count != 1 ||
                                    !_sanitar_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_sanitar_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Shoreline_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Shoreline_SpawnZones.Count != 4 ||
                                    !_sanitar_Shoreline_SpawnZones.Contains("ZoneGreenHouses") ||
                                    !_sanitar_Shoreline_SpawnZones.Contains("ZoneSanatorium1") ||
                                    !_sanitar_Shoreline_SpawnZones.Contains("ZoneSanatorium2") ||
                                    !_sanitar_Shoreline_SpawnZones.Contains("ZonePort"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Streets_SpawnZones.Count != 1 ||
                                    !_sanitar_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_sanitar_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_sanitar_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_sanitar_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Sanitar_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_sanitar_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_sanitar_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Sanitar_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _sanitar_Woods_SpawnZones.Count != 1 ||
                                    !_sanitar_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Sanitar_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Kollontay">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Kollontay to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Kollontay</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_kollontay_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_kollontay_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_kollontay_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _kollontay_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_kollontay_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Customs_SpawnZones.Count != 1 ||
                                    !_kollontay_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_FactoryDay_SpawnZones.Count != 1 ||
                                    !_kollontay_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_FactoryNight_SpawnZones.Count != 1 ||
                                    !_kollontay_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Interchange_SpawnZones.Count != 1 ||
                                    !_kollontay_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_kollontay_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Lighthouse_SpawnZones.Count != 1 ||
                                    !_kollontay_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Reserve_SpawnZones.Count != 1 ||
                                    !_kollontay_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_GroundZero_SpawnZones.Count != 1 ||
                                    !_kollontay_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_GroundZeroHigh_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_kollontay_GroundZeroHigh_SpawnZones.Contains("ZoneSandbox"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Shoreline_SpawnZones.Count != 1 ||
                                    !_kollontay_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Streets_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Streets_SpawnZones.Count != 2 ||
                                    !_kollontay_Streets_SpawnZones.Contains("ZoneClimova") ||
                                    !_kollontay_Streets_SpawnZones.Contains("ZoneMvd"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kollontay_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kollontay_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kollontay_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Kollontay_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kollontay_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kollontay_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kollontay_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kollontay_Woods_SpawnZones.Count != 1 ||
                                    !_kollontay_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kollontay_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Kaban">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Kaban to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Kaban</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_kaban_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_kaban_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_kaban_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _kaban_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_kaban_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Customs_SpawnZones.Count != 1 ||
                                    !_kaban_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_FactoryDay_SpawnZones.Count != 1 ||
                                    !_kaban_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_FactoryNight_SpawnZones.Count != 1 ||
                                    !_kaban_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Interchange_SpawnZones.Count != 1 ||
                                    !_kaban_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_kaban_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Lighthouse_SpawnZones.Count != 1 ||
                                    !_kaban_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Reserve_SpawnZones.Count != 1 ||
                                    !_kaban_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_GroundZero_SpawnZones.Count != 1 ||
                                    !_kaban_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_kaban_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Shoreline_SpawnZones.Count != 1 ||
                                    !_kaban_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Streets_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Streets_SpawnZones.Count != 1 ||
                                    !_kaban_Streets_SpawnZones.Contains("ZoneCarShowroom"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_kaban_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_kaban_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_kaban_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Kaban_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_kaban_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_kaban_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Kaban_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _kaban_Woods_SpawnZones.Count != 1 ||
                                    !_kaban_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Kaban_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Shturman">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Shturman to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Shturman</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_shturman_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_shturman_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_shturman_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _shturman_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_shturman_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Customs_SpawnZones.Count != 1 ||
                                    !_shturman_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_FactoryDay_SpawnZones.Count != 1 ||
                                    !_shturman_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_FactoryNight_SpawnZones.Count != 1 ||
                                    !_shturman_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Interchange_SpawnZones.Count != 1 ||
                                    !_shturman_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_shturman_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Lighthouse_SpawnZones.Count != 1 ||
                                    !_shturman_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Reserve_SpawnZones.Count != 1 ||
                                    !_shturman_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_GroundZero_SpawnZones.Count != 1 ||
                                    !_shturman_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_shturman_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Shoreline_SpawnZones.Count != 1 ||
                                    !_shturman_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Streets_SpawnZones.Count != 1 ||
                                    !_shturman_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_shturman_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_shturman_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Woods_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_shturman_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Shturman_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_shturman_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_shturman_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Shturman_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _shturman_Woods_SpawnZones.Count != 1 ||
                                    !_shturman_Woods_SpawnZones.Contains("ZoneWoodCutter"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Shturman_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Partisan">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Partisan to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Partisan</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_partisan_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_partisan_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_partisan_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _partisan_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_partisan_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Customs_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Customs_SpawnZones.Count != 1 ||
                                    !_partisan_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_FactoryDay_SpawnZones.Count != 1 ||
                                    !_partisan_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_FactoryNight_SpawnZones.Count != 1 ||
                                    !_partisan_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Interchange_SpawnZones.Count != 1 ||
                                    !_partisan_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_partisan_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Lighthouse_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Lighthouse_SpawnZones.Count != 1 ||
                                    !_partisan_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Reserve_SpawnZones.Count != 1 ||
                                    !_partisan_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_GroundZero_SpawnZones.Count != 1 ||
                                    !_partisan_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_partisan_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Shoreline_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Shoreline_SpawnZones.Count != 1 ||
                                    !_partisan_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Streets_SpawnZones.Count != 1 ||
                                    !_partisan_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_partisan_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_partisan_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Woods_SpawnChance != 30)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_partisan_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Partisan_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_partisan_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_partisan_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Partisan_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _partisan_Woods_SpawnZones.Count != 1 ||
                                    !_partisan_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Partisan_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Cultist">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Cultist to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Cultist</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_cultist_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_cultist_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_cultist_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _cultist_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_cultist_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Customs_SpawnChance != 15)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Customs_SpawnZones.Count != 1 ||
                                    !_cultist_Customs_SpawnZones.Contains("ZoneScavBase"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_FactoryDay_SpawnZones.Count != 1 ||
                                    !_cultist_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_FactoryNight_SpawnChance != 20)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_FactoryNight_SpawnZones.Count != 1 ||
                                    !_cultist_FactoryNight_SpawnZones.Contains("BotZone"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Interchange_SpawnZones.Count != 1 ||
                                    !_cultist_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_cultist_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Lighthouse_SpawnZones.Count != 1 ||
                                    !_cultist_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Reserve_SpawnZones.Count != 1 ||
                                    !_cultist_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_GroundZero_SpawnZones.Count != 1 ||
                                    !_cultist_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_GroundZeroHigh_SpawnChance != 44)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_cultist_GroundZeroHigh_SpawnZones.Contains("ZoneSandbox"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Shoreline_SpawnChance != 15)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Shoreline_SpawnZones.Count != 3 ||
                                    !_cultist_Shoreline_SpawnZones.Contains("ZoneSanatorium1") ||
                                    !_cultist_Shoreline_SpawnZones.Contains("ZoneSanatorium2") ||
                                    !_cultist_Shoreline_SpawnZones.Contains("ZoneForestSpawn"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Streets_SpawnZones.Count != 1 ||
                                    !_cultist_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_cultist_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_cultist_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Woods_SpawnChance != 15)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_cultist_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Cultist_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_cultist_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_cultist_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Cultist_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _cultist_Woods_SpawnZones.Count != 2 ||
                                    !_cultist_Woods_SpawnZones.Contains("ZoneMiniHouse") ||
                                    !_cultist_Woods_SpawnZones.Contains("ZoneBrokenVill"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Cultist_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Smugglers">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Smugglers to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Smugglers</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_smugglers_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_smugglers_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_smugglers_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _smugglers_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_smugglers_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Customs_SpawnChance != 5)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Customs_SpawnZones.Count != 2 ||
                                    !_smugglers_Customs_SpawnZones.Contains("ZoneFactoryCenter") ||
                                    !_smugglers_Customs_SpawnZones.Contains("ZoneScavBase"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_FactoryDay_SpawnZones.Count != 1 ||
                                    !_smugglers_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_FactoryNight_SpawnZones.Count != 1 ||
                                    !_smugglers_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Interchange_SpawnZones.Count != 1 ||
                                    !_smugglers_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_smugglers_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Lighthouse_SpawnZones.Count != 1 ||
                                    !_smugglers_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Reserve_SpawnZones.Count != 1 ||
                                    !_smugglers_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_GroundZero_SpawnZones.Count != 1 ||
                                    !_smugglers_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_smugglers_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Shoreline_SpawnZones.Count != 1 ||
                                    !_smugglers_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Streets_SpawnZones.Count != 1 ||
                                    !_smugglers_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_smugglers_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_smugglers_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Woods_SpawnChance != 5)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_smugglers_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Smugglers_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_smugglers_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_smugglers_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Smugglers_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _smugglers_Woods_SpawnZones.Count != 5 ||
                                    !_smugglers_Woods_SpawnZones.Contains("ZoneMiniHouse") ||
                                    !_smugglers_Woods_SpawnZones.Contains("ZoneClearVill") ||
                                    !_smugglers_Woods_SpawnZones.Contains("ZoneRoad") ||
                                    !_smugglers_Woods_SpawnZones.Contains("ZoneBrokenVill") ||
                                    !_smugglers_Woods_SpawnZones.Contains("ZoneScavBase2"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Smugglers_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Raiders">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Raiders to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Raiders</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_raiders_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_raiders_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_raiders_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _raiders_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_raiders_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Adds additional spawns that you configure below per map." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Add Extra Spawns</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                        <MudSwitch T="bool" @bind-Value="_raiders_AddExtraSpawns" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_raiders_AddExtraSpawns</MudSwitch>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_AddExtraSpawns"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_AddExtraSpawns" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_AddExtraSpawns != false)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_AddExtraSpawns" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Enabling this will remove the vanilla Raider spawns from maps, if you still want raiders - enable 'Add Extra Spawns' and set the spawns below." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Remove Vanilla Spawns</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                        <MudSwitch T="bool" @bind-Value="_raiders_DisableVanillaSpawns" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_raiders_DisableVanillaSpawns</MudSwitch>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_DisableVanillaSpawns"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_DisableVanillaSpawns" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_DisableVanillaSpawns != false)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_DisableVanillaSpawns" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Customs_SpawnZones.Count != 1 ||
                                    !_raiders_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_FactoryDay_SpawnZones.Count != 1 ||
                                    !_raiders_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_FactoryNight_SpawnZones.Count != 1 ||
                                    !_raiders_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Interchange_SpawnZones.Count != 1 ||
                                    !_raiders_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_raiders_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Lighthouse_SpawnZones.Count != 1 ||
                                    !_raiders_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Reserve_SpawnZones.Count != 1 ||
                                    !_raiders_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_GroundZero_SpawnZones.Count != 1 ||
                                    !_raiders_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_raiders_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Shoreline_SpawnZones.Count != 1 ||
                                    !_raiders_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Streets_SpawnZones.Count != 1 ||
                                    !_raiders_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_raiders_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_raiders_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_raiders_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Raiders_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_raiders_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_raiders_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Raiders_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _raiders_Woods_SpawnZones.Count != 1 ||
                                    !_raiders_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Raiders_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Rogues">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Rogues to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Rogues</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_rogues_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_rogues_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_rogues_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _rogues_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_rogues_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Adds additional spawns that you configure below per map." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Add Extra Spawns</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                        <MudSwitch T="bool" @bind-Value="_rogues_AddExtraSpawns" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_rogues_AddExtraSpawns</MudSwitch>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_AddExtraSpawns"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_AddExtraSpawns" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_AddExtraSpawns != false)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_AddExtraSpawns" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Enabling this will remove the vanilla Rogue spawns from maps, if you still want rogues - enable 'Add Extra Spawns' and set the spawns below." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Remove Vanilla Spawns</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="6">
                                    <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                        <MudSwitch T="bool" @bind-Value="_rogues_DisableVanillaSpawns" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_rogues_DisableVanillaSpawns</MudSwitch>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_DisableVanillaSpawns"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_DisableVanillaSpawns" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_DisableVanillaSpawns != false)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_DisableVanillaSpawns" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Customs_SpawnZones.Count != 1 ||
                                    !_rogues_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_FactoryDay_SpawnZones.Count != 1 ||
                                    !_rogues_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_FactoryNight_SpawnZones.Count != 1 ||
                                    !_rogues_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Interchange_SpawnZones.Count != 1 ||
                                    !_rogues_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_rogues_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Lighthouse_SpawnZones.Count != 1 ||
                                    !_rogues_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Reserve_SpawnZones.Count != 1 ||
                                    !_rogues_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_GroundZero_SpawnZones.Count != 1 ||
                                    !_rogues_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_rogues_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Shoreline_SpawnZones.Count != 1 ||
                                    !_rogues_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Streets_SpawnZones.Count != 1 ||
                                    !_rogues_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_rogues_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_rogues_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_rogues_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Rogues_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_rogues_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_rogues_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Rogues_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _rogues_Woods_SpawnZones.Count != 1 ||
                                    !_rogues_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Rogues_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
                <MudTabPanel Text="Santa">
                    <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Enable/Disable" Expanded=true>
                        <MudGrid>
                            <MudItem xs="1" />
                            <MudItem xs="4">
                                <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                    <MudTooltip Text="Allows Santa to spawn if enabled, they will never spawn if disabled." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                        <MudText>Enable Santa</MudText>
                                    </MudTooltip>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="6">
                                <MudPaper Class="d-flex align-center mud-width-full" Elevation="0">
                                    <MudSwitch T="bool" @bind-Value="_santa_Enabled" Color="Color.Success" UncheckedColor="Color.Default" LabelPlacement="Placement.End">@_santa_Enabled</MudSwitch>
                                </MudPaper>
                            </MudItem>
                            <MudItem xs="1">
                                @if (MainLayout._appUndoButtonToggle &&
                                MainLayout.pendingChanges.Contains("_santa_Enabled"))
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Enable" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                }
                                else if (MainLayout._appDefaultButtonToggle &&
                                _santa_Enabled != true)
                                {
                                    <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Enable" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                }
                            </MudItem>
                        </MudGrid>
                    </MudExpansionPanel>
                    @if (_santa_Enabled)
                    {
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="General" Expanded=true>
                            <MudGrid>

                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How much time must pass before the spawn is triggered, in seconds. -1 is immediate." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Timer</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Time</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Time" ValueLabel="true" Min="-1" Max="3600" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Time"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Time" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Time != -1)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Time" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                        <MudExpansionPanel Class="mud-expansion-panels-borders ma-3 pa-5" Style="padding-bottom:25px" Text="Spawn Chances & Zones" Expanded=true>
                            <MudGrid>
                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Customs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Customs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Customs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Customs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Customs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Customs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Customs_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Customs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Customs_SpawnChance == 0">
                                            @foreach (var name in CustomsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Customs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Customs_SpawnZones.Count != 1 ||
                                    !_santa_Customs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Customs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Day)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_FactoryDay_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_FactoryDay_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_FactoryDay_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_FactoryDay_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_FactoryDay_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_FactoryDay_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_FactoryDay_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_FactoryDay_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_FactoryDay_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_FactoryDay_SpawnZones.Count != 1 ||
                                    !_santa_FactoryDay_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_FactoryDay_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Factory (Night)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_FactoryNight_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_FactoryNight_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_FactoryNight_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_FactoryNight_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_FactoryNight_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_FactoryNight_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_FactoryNight_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_FactoryNight_SpawnChance == 0">
                                            @foreach (var name in FactorySpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_FactoryNight_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_FactoryNight_SpawnZones.Count != 1 ||
                                    !_santa_FactoryNight_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_FactoryNight_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Interchange</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Interchange_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Interchange_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Interchange_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Interchange_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Interchange_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Interchange_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Interchange_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Interchange_SpawnChance == 0">
                                            @foreach (var name in InterchangeSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Interchange_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Interchange_SpawnZones.Count != 1 ||
                                    !_santa_Interchange_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Interchange_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Labs</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Labs_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Labs_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Labs_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Labs_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Labs_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Labs_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Labs_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Labs_SpawnChance == 0">
                                            @foreach (var name in LabsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Labs_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    !_santa_Labs_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Labs_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Lighthouse</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Lighthouse_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Lighthouse_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Lighthouse_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Lighthouse_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Lighthouse_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Lighthouse_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Lighthouse_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Lighthouse_SpawnChance == 0">
                                            @foreach (var name in LighthouseSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Lighthouse_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Lighthouse_SpawnZones.Count != 1 ||
                                    !_santa_Lighthouse_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Lighthouse_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Reserve</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Reserve_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Reserve_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Reserve_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Reserve_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Reserve_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Reserve_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Reserve_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Reserve_SpawnChance == 0">
                                            @foreach (var name in ReserveSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Reserve_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Reserve_SpawnZones.Count != 1 ||
                                    !_santa_Reserve_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Reserve_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_GroundZero_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_GroundZero_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_GroundZero_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_GroundZero_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_GroundZero_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_GroundZero_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_GroundZero_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_GroundZero_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_GroundZero_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_GroundZero_SpawnZones.Count != 1 ||
                                    !_santa_GroundZero_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_GroundZero_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Ground Zero (High)</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_GroundZeroHigh_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_GroundZeroHigh_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_GroundZeroHigh_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_GroundZeroHigh_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_GroundZeroHigh_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_GroundZeroHigh_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_GroundZeroHigh_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_GroundZeroHigh_SpawnChance == 0">
                                            @foreach (var name in GroundZeroSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_GroundZeroHigh_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_GroundZeroHigh_SpawnZones.Count != 1 ||
                                    !_santa_GroundZeroHigh_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_GroundZeroHigh_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Shoreline</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Shoreline_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Shoreline_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Shoreline_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Shoreline_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Shoreline_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Shoreline_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Shoreline_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Shoreline_SpawnChance == 0">
                                            @foreach (var name in ShorelineSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Shoreline_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Shoreline_SpawnZones.Count != 1 ||
                                    !_santa_Shoreline_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Shoreline_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Streets of Tarkov</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Streets_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Streets_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Streets_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Streets_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Streets_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Streets_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Streets_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Streets_SpawnChance == 0">
                                            @foreach (var name in StreetsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Streets_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Streets_SpawnZones.Count != 1 ||
                                    !_santa_Streets_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Streets_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>

                                <MudItem xs="12">
                                    <MudPaper Class="align-center mud-width-full ma-1" Elevation="0">
                                        <MudText>Woods</MudText>
                                        <MudDivider />
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="How likely the boss is to spawn." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Chance</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    <MudButton Style="margin-top: -20px;" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">@_santa_Woods_SpawnChance</MudButton>
                                </MudItem>
                                <MudItem xs="5">
                                    <MudSlider @bind-Value="_santa_Woods_SpawnChance" ValueLabel="true" Min="0" Max="100" Color="Color.Info" Size="Size.Medium" />
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Woods_SpawnChance"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Woods_SpawnChance != 0)
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Woods_SpawnChance" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="4">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudTooltip Text="Possible zones the boss will spawn in, select as many as you want - or none and they will spawn literally anywhere." Color="Color.Primary" Placement="Placement.Right" Arrow="true">
                                            <MudText>Spawn Zones</MudText>
                                        </MudTooltip>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1" />
                                <MudItem xs="5">
                                    <MudPaper Class="d-flex align-center mud-width-full ma-1" Elevation="0">
                                        <MudSelect T="string" Style="margin-top: -15px;" Label="Spawn Zones"
                                                   MultiSelection="true"
                                                   SelectedValues="_santa_Woods_SpawnZones"
                                                   SelectedValuesChanged="On_Santa_Woods_SpawnZonesChanged"
                                                   Variant="Variant.Filled"
                                                   AnchorOrigin="Origin.CenterLeft"
                                                   Dense Clearable ShrinkLabel
                                                   Disabled="_santa_Woods_SpawnChance == 0">
                                            @foreach (var name in WoodsSpawnZones)
                                            {
                                                <MudSelectItem T="string" Value="@name">@name</MudSelectItem>
                                            }
                                        </MudSelect>
                                    </MudPaper>
                                </MudItem>
                                <MudItem xs="1">
                                    @if (MainLayout._appUndoButtonToggle &&
                                   MainLayout.pendingChanges.Contains("_santa_Woods_SpawnZones"))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="undo_Santa_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Inherit" Size="Size.Small">Undo</MudButton>
                                    }
                                    else if (MainLayout._appDefaultButtonToggle &&
                                    _santa_Woods_SpawnZones.Count != 1 ||
                                    !_santa_Woods_SpawnZones.Contains(string.Empty))
                                    {
                                        <MudButton Style="margin-top: -20px;" @onclick="default_Santa_Woods_SpawnZones" Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small">Default</MudButton>
                                    }
                                </MudItem>
                            </MudGrid>
                        </MudExpansionPanel>
                    }
                </MudTabPanel>
            </MudExpansionPanels>
        </MudTabs>
    </MudContainer>
</MudMainContent>

@code {    
    #region BossDifficulty
    private int _boss_EasyDifficulty
    {
        get => Data.bossDifficulty.easy;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossDifficulty.easy);
            Data.bossDifficulty.easy = value;
        }
    }
    private void undo_Boss_Easy() => _boss_EasyDifficulty = OriginalConfig.bossDifficulty.easy;
    private void default_Boss_Easy() => _boss_EasyDifficulty = 0;
    private int _boss_NormalDifficulty
    {
        get => Data.bossDifficulty.normal;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossDifficulty.normal);
            Data.bossDifficulty.normal = value;
        }
    }
    private void undo_Boss_Normal() => _boss_NormalDifficulty = OriginalConfig.bossDifficulty.normal;
    private void default_Boss_Normal() => _boss_NormalDifficulty = 60;
    private int _boss_HardDifficulty
    {
        get => Data.bossDifficulty.hard;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossDifficulty.hard);
            Data.bossDifficulty.hard = value;
        }
    }
    private void undo_Boss_Hard() => _boss_HardDifficulty = OriginalConfig.bossDifficulty.hard;
    private void default_Boss_Hard() => _boss_HardDifficulty = 30;
    private int _boss_ImpossibleDifficulty
    {
        get => Data.bossDifficulty.impossible;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossDifficulty.impossible);
            Data.bossDifficulty.impossible = value;
        }
    }
    private void undo_Boss_Impossible() => _boss_ImpossibleDifficulty = OriginalConfig.bossDifficulty.impossible;
    private void default_Boss_Impossible() => _boss_ImpossibleDifficulty = 10;
    #endregion
    #region LocationZones
    private string[] CustomsSpawnZones =
    {
        "ZoneBrige","ZoneCrossRoad","ZoneDormitory","ZoneGasStation","ZoneFactoryCenter","ZoneFactorySide","ZoneOldAZS","ZoneBlockPost","ZoneTankSquare","ZoneWade","ZoneCustoms","ZoneScavBase"
    };
    private string[] FactorySpawnZones =
    {
        "BotZone"
    };
    private string[] InterchangeSpawnZones =
    {
        "ZoneCenterBot","ZoneIDEA","ZoneCenter","ZoneIDEAPark",
        "ZoneTrucks","ZoneRoad","ZoneOLI","ZoneGoshan",
        "ZoneOLIPark","ZonePowerStation"
    };
    private string[] LabsSpawnZones =
    {
        "BotZoneBasement","BotZoneFloor1","BotZoneFloor2","BotZoneGate1",
        "BotZoneGate2"
    };
    private string[] LighthouseSpawnZones =
    {
        "Zone_Containers","Zone_Rocks","Zone_Chalet","Zone_Village",
        "Zone_Bridge","Zone_OldHouse","Zone_LongRoad","Zone_RoofBeach",
        "Zone_DestroyedHouse","Zone_RoofContainers","Zone_Blockpost","Zone_RoofRocks",
        "Zone_TreatmentRocks","Zone_TreatmentContainers","Zone_TreatmentBeach","Zone_Hellicopter",
        "Zone_SniperPeak","Zone_Island"
    };
    private string[] ReserveSpawnZones =
    {
        "ZoneRailStrorage","ZonePTOR1","ZonePTOR2","ZoneBarrack",
        "ZoneBunkerStorage","ZoneSubStorage","ZoneSubCommand"
    };
    private string[] GroundZeroSpawnZones =
    {
        "ZoneSandbox"
    };
    private string[] ShorelineSpawnZones =
    {
        "ZoneGreenHouses","ZoneIsland","ZoneForestGasStation","ZoneGasStation",
        "ZonePowerStation","ZoneBunker","ZoneBusStation","ZonePort",
        "ZoneForestTruck","ZoneForestSpawn","ZoneSanatorium1","ZoneSanatorium2",
        "ZoneStartVillage","ZoneMeteoStation","ZoneRailWays","ZoneSmuglers",
        "ZonePassClose","ZoneTunnel"
    };
    private string[] StreetsSpawnZones =
    {
        "ZoneSW01","ZoneConstruction","ZoneCarShowroom","ZoneCinema",
        "ZoneFactory","ZoneHotel_1","ZoneHotel_2","ZoneConcordia_1",
        "ZoneConcordiaParking","ZoneColumn","ZoneSW00","ZoneStilo",
        "ZoneCard1","ZoneMvd","ZoneClimova"
    };
    private string[] WoodsSpawnZones =
    {
        "ZoneWoodCutter","ZoneHouse","ZoneBigRocks","ZoneRoad",
        "ZoneHighRocks","ZoneMiniHouse","ZoneRedHouse","ZoneScavBase2",
        "ZoneClearVill","ZoneBrokenVill","ZoneUsecBase","ZoneStoneBunker",
        "ZoneDepo"
    };
    #endregion

    #region GoonsGlobalConfig
    private bool _goons_Enabled
    {
        get => Data.bossConfig.bossKnight.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.enable);
            Data.bossConfig.bossKnight.enable = value;
        }
    }
    private void undo_Goons_Enable() => _goons_Enabled = OriginalConfig.bossConfig.bossKnight.enable;
    private void default_Goons_Enable() => _goons_Enabled = true;
    private int _goons_Time
    {
        get => Data.bossConfig.bossKnight.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.time);
            Data.bossConfig.bossKnight.time = value;
        }
    }
    private void undo_Goons_Time() => _goons_Time = OriginalConfig.bossConfig.bossKnight.time;
    private void default_Goons_Time() => _goons_Time = -1;
    #endregion
    #region GoonsSpawnConfig
    #region GoonsCustoms
    private int _goons_Customs_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.bigmap);
            Data.bossConfig.bossKnight.spawnChance.bigmap = value;
        }
    }
    private void undo_Goons_Customs_SpawnChance() => _goons_Customs_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.bigmap;
    private void default_Goons_Customs_SpawnChance() => _goons_Customs_SpawnChance = 30;
    private List<string> _goons_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set 
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.bigmap);
            }
        }
    }
    private void On_Goons_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Customs_SpawnZones() => _goons_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.bigmap };
    private void default_Goons_Customs_SpawnZones() => _goons_Customs_SpawnZones = new List<string> { "ZoneScavBase" };
    #endregion
    #region GoonsFactory
    private int _goons_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.factory4_day);
            Data.bossConfig.bossKnight.spawnChance.factory4_day = value;
        }
    }
    private void undo_Goons_FactoryDay_SpawnChance() => _goons_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.factory4_day;
    private void default_Goons_FactoryDay_SpawnChance() => _goons_FactoryDay_SpawnChance = 0;
    private List<string> _goons_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKnight.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.factory4_day);
            }
        }
    }
    private void On_Goons_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Goons_FactoryDay_SpawnZones() => _goons_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.factory4_day };
    private void default_Goons_FactoryDay_SpawnZones() => _goons_FactoryDay_SpawnZones = new List<string>();
    private int _goons_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.factory4_night);
            Data.bossConfig.bossKnight.spawnChance.factory4_night = value;
        }
    }
    private void undo_Goons_FactoryNight_SpawnChance() => _goons_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.factory4_night;
    private void default_Goons_FactoryNight_SpawnChance() => _goons_FactoryNight_SpawnChance = 0;
    private List<string> _goons_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKnight.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.factory4_night);
            }
        }
    }
    private void On_Goons_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Goons_FactoryNight_SpawnZones() => _goons_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.factory4_night };
    private void default_Goons_FactoryNight_SpawnZones() => _goons_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region GoonsInterchange
    private int _goons_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.interchange);
            Data.bossConfig.bossKnight.spawnChance.interchange = value;
        }
    }
    private void undo_Goons_Interchange_SpawnChance() => _goons_Interchange_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.interchange;
    private void default_Goons_Interchange_SpawnChance() => _goons_Interchange_SpawnChance = 0;
    private List<string> _goons_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.interchange);
            }
        }
    }
    private void On_Goons_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Interchange_SpawnZones() => _goons_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.interchange };
    private void default_Goons_Interchange_SpawnZones() => _goons_Interchange_SpawnZones = new List<string>();
    #endregion
    #region GoonsLabs
    private int _goons_Labs_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.laboratory);
            Data.bossConfig.bossKnight.spawnChance.laboratory = value;
        }
    }
    private void undo_Goons_Labs_SpawnChance() => _goons_Labs_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.laboratory;
    private void default_Goons_Labs_SpawnChance() => _goons_Labs_SpawnChance = 0;
    private List<string> _goons_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.laboratory);
            }
        }
    }
    private void On_Goons_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Labs_SpawnZones() => _goons_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.laboratory };
    private void default_Goons_Labs_SpawnZones() => _goons_Labs_SpawnZones = new List<string>();
    #endregion
    #region GoonsLighthouse
    private int _goons_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.lighthouse);
            Data.bossConfig.bossKnight.spawnChance.lighthouse = value;
        }
    }
    private void undo_Goons_Lighthouse_SpawnChance() => _goons_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.lighthouse;
    private void default_Goons_Lighthouse_SpawnChance() => _goons_Lighthouse_SpawnChance = 30;
    private List<string> _goons_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.lighthouse);
            }
        }
    }
    private void On_Goons_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Lighthouse_SpawnZones() => _goons_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.lighthouse };
    private void default_Goons_Lighthouse_SpawnZones() => _goons_Lighthouse_SpawnZones = new List<string> { "Zone_TreatmentContainers,Zone_Chalet" };
    #endregion
    #region GoonsReserve
    private int _goons_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.rezervbase);
            Data.bossConfig.bossKnight.spawnChance.rezervbase = value;
        }
    }
    private void undo_Goons_Reserve_SpawnChance() => _goons_Reserve_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.rezervbase;
    private void default_Goons_Reserve_SpawnChance() => _goons_Reserve_SpawnChance = 0;
    private List<string> _goons_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.rezervbase);
            }
        }
    }
    private void On_Goons_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Reserve_SpawnZones() => _goons_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.rezervbase };
    private void default_Goons_Reserve_SpawnZones() => _goons_Reserve_SpawnZones = new List<string>();
    #endregion
    #region GoonsGroundZero
    private int _goons_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.sandbox);
            Data.bossConfig.bossKnight.spawnChance.sandbox = value;
        }
    }
    private void undo_Goons_GroundZero_SpawnChance() => _goons_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.sandbox;
    private void default_Goons_GroundZero_SpawnChance() => _goons_GroundZero_SpawnChance = 0;
    private List<string> _goons_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.sandbox);
            }
        }
    }
    private void On_Goons_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Goons_GroundZero_SpawnZones() => _goons_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.sandbox };
    private void default_Goons_GroundZero_SpawnZones() => _goons_GroundZero_SpawnZones = new List<string>();
    private int _goons_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.sandbox_high);
            Data.bossConfig.bossKnight.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Goons_GroundZeroHigh_SpawnChance() => _goons_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.sandbox_high;
    private void default_Goons_GroundZeroHigh_SpawnChance() => _goons_GroundZeroHigh_SpawnChance = 0;
    private List<string> _goons_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.sandbox_high);
            }
        }
    }
    private void On_Goons_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Goons_GroundZeroHigh_SpawnZones() => _goons_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.sandbox_high };
    private void default_Goons_GroundZeroHigh_SpawnZones() => _goons_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region GoonsShoreline
    private int _goons_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.shoreline);
            Data.bossConfig.bossKnight.spawnChance.shoreline = value;
        }
    }
    private void undo_Goons_Shoreline_SpawnChance() => _goons_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.shoreline;
    private void default_Goons_Shoreline_SpawnChance() => _goons_Shoreline_SpawnChance = 30;
    private List<string> _goons_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.shoreline);
            }
        }
    }
    private void On_Goons_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Shoreline_SpawnZones() => _goons_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.shoreline };
    private void default_Goons_Shoreline_SpawnZones() => _goons_Shoreline_SpawnZones = new List<string> { "ZoneMeteoStation" };
    #endregion
    #region GoonsStreets
    private int _goons_Streets_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.tarkovstreets);
            Data.bossConfig.bossKnight.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Goons_Streets_SpawnChance() => _goons_Streets_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.tarkovstreets;
    private void default_Goons_Streets_SpawnChance() => _goons_Streets_SpawnChance = 0;
    private List<string> _goons_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Goons_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Streets_SpawnZones() => _goons_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.tarkovstreets };
    private void default_Goons_Streets_SpawnZones() => _goons_Streets_SpawnZones = new List<string>();
    #endregion
    #region GoonsWoods
    private int _goons_Woods_SpawnChance
    {
        get => Data.bossConfig.bossKnight.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKnight.spawnChance.woods);
            Data.bossConfig.bossKnight.spawnChance.woods = value;
        }
    }
    private void undo_Goons_Woods_SpawnChance() => _goons_Woods_SpawnChance = OriginalConfig.bossConfig.bossKnight.spawnChance.woods;
    private void default_Goons_Woods_SpawnChance() => _goons_Woods_SpawnChance = 30;
    private List<string> _goons_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKnight.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKnight.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKnight.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKnight.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKnight.bossZone.woods);
            }
        }
    }
    private void On_Goons_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _goons_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Goons_Woods_SpawnZones() => _goons_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKnight.bossZone.woods };
    private void default_Goons_Woods_SpawnZones() => _goons_Woods_SpawnZones = new List<string> { "ZoneScavBase2" };
    #endregion
    #endregion
    
    #region ReshalaGlobalConfig
    private bool _reshala_Enabled
    {
        get => Data.bossConfig.bossBully.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.enable);
            Data.bossConfig.bossBully.enable = value;
        }
    }
    private void undo_Reshala_Enable() => _reshala_Enabled = OriginalConfig.bossConfig.bossBully.enable;
    private void default_Reshala_Enable() => _reshala_Enabled = true;
    private int _reshala_Time
    {
        get => Data.bossConfig.bossBully.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.time);
            Data.bossConfig.bossBully.time = value;
        }
    }
    private void undo_Reshala_Time() => _reshala_Time = OriginalConfig.bossConfig.bossBully.time;
    private void default_Reshala_Time() => _reshala_Time = -1;
    #endregion
    #region ReshalaSpawnConfig
    #region ReshalaCustoms
    private int _reshala_Customs_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.bigmap);
            Data.bossConfig.bossBully.spawnChance.bigmap = value;
        }
    }
    private void undo_Reshala_Customs_SpawnChance() => _reshala_Customs_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.bigmap;
    private void default_Reshala_Customs_SpawnChance() => _reshala_Customs_SpawnChance = 30;
    private List<string> _reshala_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.bigmap);
            }
        }
    }
    private void On_Reshala_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Customs_SpawnZones() => _reshala_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.bigmap };
    private void default_Reshala_Customs_SpawnZones() => _reshala_Customs_SpawnZones = new List<string> { "ZoneDormitory,ZoneGasStation,ZoneScavBase" };
    #endregion
    #region ReshalaFactory
    private int _reshala_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.factory4_day);
            Data.bossConfig.bossBully.spawnChance.factory4_day = value;
        }
    }
    private void undo_Reshala_FactoryDay_SpawnChance() => _reshala_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.factory4_day;
    private void default_Reshala_FactoryDay_SpawnChance() => _reshala_FactoryDay_SpawnChance = 0;
    private List<string> _reshala_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossBully.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.factory4_day);
            }
        }
    }
    private void On_Reshala_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_FactoryDay_SpawnZones() => _reshala_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.factory4_day };
    private void default_Reshala_FactoryDay_SpawnZones() => _reshala_FactoryDay_SpawnZones = new List<string>();
    private int _reshala_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.factory4_night);
            Data.bossConfig.bossBully.spawnChance.factory4_night = value;
        }
    }
    private void undo_Reshala_FactoryNight_SpawnChance() => _reshala_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.factory4_night;
    private void default_Reshala_FactoryNight_SpawnChance() => _reshala_FactoryNight_SpawnChance = 0;
    private List<string> _reshala_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossBully.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.factory4_night);
            }
        }
    }
    private void On_Reshala_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_FactoryNight_SpawnZones() => _reshala_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.factory4_night };
    private void default_Reshala_FactoryNight_SpawnZones() => _reshala_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region ReshalaInterchange
    private int _reshala_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.interchange);
            Data.bossConfig.bossBully.spawnChance.interchange = value;
        }
    }
    private void undo_Reshala_Interchange_SpawnChance() => _reshala_Interchange_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.interchange;
    private void default_Reshala_Interchange_SpawnChance() => _reshala_Interchange_SpawnChance = 0;
    private List<string> _reshala_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.interchange);
            }
        }
    }
    private void On_Reshala_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Interchange_SpawnZones() => _reshala_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.interchange };
    private void default_Reshala_Interchange_SpawnZones() => _reshala_Interchange_SpawnZones = new List<string>();
    #endregion
    #region ReshalaLabs
    private int _reshala_Labs_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.laboratory);
            Data.bossConfig.bossBully.spawnChance.laboratory = value;
        }
    }
    private void undo_Reshala_Labs_SpawnChance() => _reshala_Labs_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.laboratory;
    private void default_Reshala_Labs_SpawnChance() => _reshala_Labs_SpawnChance = 0;
    private List<string> _reshala_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.laboratory);
            }
        }
    }
    private void On_Reshala_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Labs_SpawnZones() => _reshala_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.laboratory };
    private void default_Reshala_Labs_SpawnZones() => _reshala_Labs_SpawnZones = new List<string>();
    #endregion
    #region ReshalaLighthouse
    private int _reshala_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.lighthouse);
            Data.bossConfig.bossBully.spawnChance.lighthouse = value;
        }
    }
    private void undo_Reshala_Lighthouse_SpawnChance() => _reshala_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.lighthouse;
    private void default_Reshala_Lighthouse_SpawnChance() => _reshala_Lighthouse_SpawnChance = 0;
    private List<string> _reshala_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.lighthouse);
            }
        }
    }
    private void On_Reshala_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Lighthouse_SpawnZones() => _reshala_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.lighthouse };
    private void default_Reshala_Lighthouse_SpawnZones() => _reshala_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region ReshalaReserve
    private int _reshala_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.rezervbase);
            Data.bossConfig.bossBully.spawnChance.rezervbase = value;
        }
    }
    private void undo_Reshala_Reserve_SpawnChance() => _reshala_Reserve_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.rezervbase;
    private void default_Reshala_Reserve_SpawnChance() => _reshala_Reserve_SpawnChance = 0;
    private List<string> _reshala_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.rezervbase);
            }
        }
    }
    private void On_Reshala_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Reserve_SpawnZones() => _reshala_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.rezervbase };
    private void default_Reshala_Reserve_SpawnZones() => _reshala_Reserve_SpawnZones = new List<string>();
    #endregion
    #region ReshalaGroundZero
    private int _reshala_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.sandbox);
            Data.bossConfig.bossBully.spawnChance.sandbox = value;
        }
    }
    private void undo_Reshala_GroundZero_SpawnChance() => _reshala_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.sandbox;
    private void default_Reshala_GroundZero_SpawnChance() => _reshala_GroundZero_SpawnChance = 0;
    private List<string> _reshala_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.sandbox);
            }
        }
    }
    private void On_Reshala_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_GroundZero_SpawnZones() => _reshala_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.sandbox };
    private void default_Reshala_GroundZero_SpawnZones() => _reshala_GroundZero_SpawnZones = new List<string>();
    private int _reshala_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.sandbox_high);
            Data.bossConfig.bossBully.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Reshala_GroundZeroHigh_SpawnChance() => _reshala_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.sandbox_high;
    private void default_Reshala_GroundZeroHigh_SpawnChance() => _reshala_GroundZeroHigh_SpawnChance = 0;
    private List<string> _reshala_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.sandbox_high);
            }
        }
    }
    private void On_Reshala_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_GroundZeroHigh_SpawnZones() => _reshala_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.sandbox_high };
    private void default_Reshala_GroundZeroHigh_SpawnZones() => _reshala_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region ReshalaShoreline
    private int _reshala_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.shoreline);
            Data.bossConfig.bossBully.spawnChance.shoreline = value;
        }
    }
    private void undo_Reshala_Shoreline_SpawnChance() => _reshala_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.shoreline;
    private void default_Reshala_Shoreline_SpawnChance() => _reshala_Shoreline_SpawnChance = 0;
    private List<string> _reshala_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.shoreline);
            }
        }
    }
    private void On_Reshala_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Shoreline_SpawnZones() => _reshala_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.shoreline };
    private void default_Reshala_Shoreline_SpawnZones() => _reshala_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region ReshalaStreets
    private int _reshala_Streets_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.tarkovstreets);
            Data.bossConfig.bossBully.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Reshala_Streets_SpawnChance() => _reshala_Streets_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.tarkovstreets;
    private void default_Reshala_Streets_SpawnChance() => _reshala_Streets_SpawnChance = 0;
    private List<string> _reshala_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Reshala_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Streets_SpawnZones() => _reshala_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.tarkovstreets };
    private void default_Reshala_Streets_SpawnZones() => _reshala_Streets_SpawnZones = new List<string>();
    #endregion
    #region ReshalaWoods
    private int _reshala_Woods_SpawnChance
    {
        get => Data.bossConfig.bossBully.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBully.spawnChance.woods);
            Data.bossConfig.bossBully.spawnChance.woods = value;
        }
    }
    private void undo_Reshala_Woods_SpawnChance() => _reshala_Woods_SpawnChance = OriginalConfig.bossConfig.bossBully.spawnChance.woods;
    private void default_Reshala_Woods_SpawnChance() => _reshala_Woods_SpawnChance = 0;
    private List<string> _reshala_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBully.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBully.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBully.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBully.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBully.bossZone.woods);
            }
        }
    }
    private void On_Reshala_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _reshala_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Reshala_Woods_SpawnZones() => _reshala_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBully.bossZone.woods };
    private void default_Reshala_Woods_SpawnZones() => _reshala_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region TagillaGlobalConfig
    private bool _tagilla_Enabled
    {
        get => Data.bossConfig.bossTagilla.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.enable);
            Data.bossConfig.bossTagilla.enable = value;
        }
    }
    private void undo_Tagilla_Enable() => _tagilla_Enabled = OriginalConfig.bossConfig.bossTagilla.enable;
    private void default_Tagilla_Enable() => _tagilla_Enabled = true;
    private int _tagilla_Time
    {
        get => Data.bossConfig.bossTagilla.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.time);
            Data.bossConfig.bossTagilla.time = value;
        }
    }
    private void undo_Tagilla_Time() => _tagilla_Time = OriginalConfig.bossConfig.bossTagilla.time;
    private void default_Tagilla_Time() => _tagilla_Time = -1;
    #endregion
    #region TagillaSpawnConfig
    #region TagillaCustoms
    private int _tagilla_Customs_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.bigmap);
            Data.bossConfig.bossTagilla.spawnChance.bigmap = value;
        }
    }
    private void undo_Tagilla_Customs_SpawnChance() => _tagilla_Customs_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.bigmap;
    private void default_Tagilla_Customs_SpawnChance() => _tagilla_Customs_SpawnChance = 0;
    private List<string> _tagilla_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.bigmap);
            }
        }
    }
    private void On_Tagilla_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Customs_SpawnZones() => _tagilla_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.bigmap };
    private void default_Tagilla_Customs_SpawnZones() => _tagilla_Customs_SpawnZones = new List<string>();
    #endregion
    #region TagillaFactory
    private int _tagilla_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.factory4_day);
            Data.bossConfig.bossTagilla.spawnChance.factory4_day = value;
        }
    }
    private void undo_Tagilla_FactoryDay_SpawnChance() => _tagilla_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.factory4_day;
    private void default_Tagilla_FactoryDay_SpawnChance() => _tagilla_FactoryDay_SpawnChance = 30;
    private List<string> _tagilla_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossTagilla.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.factory4_day);
            }
        }
    }
    private void On_Tagilla_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_FactoryDay_SpawnZones() => _tagilla_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.factory4_day };
    private void default_Tagilla_FactoryDay_SpawnZones() => _tagilla_FactoryDay_SpawnZones = new List<string> { "BotZone" };
    private int _tagilla_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.factory4_night);
            Data.bossConfig.bossTagilla.spawnChance.factory4_night = value;
        }
    }
    private void undo_Tagilla_FactoryNight_SpawnChance() => _tagilla_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.factory4_night;
    private void default_Tagilla_FactoryNight_SpawnChance() => _tagilla_FactoryNight_SpawnChance = 30;
    private List<string> _tagilla_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossTagilla.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.factory4_night);
            }
        }
    }
    private void On_Tagilla_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_FactoryNight_SpawnZones() => _tagilla_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.factory4_night };
    private void default_Tagilla_FactoryNight_SpawnZones() => _tagilla_FactoryNight_SpawnZones = new List<string> { "BotZone" };
    #endregion
    #region TagillaInterchange
    private int _tagilla_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.interchange);
            Data.bossConfig.bossTagilla.spawnChance.interchange = value;
        }
    }
    private void undo_Tagilla_Interchange_SpawnChance() => _tagilla_Interchange_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.interchange;
    private void default_Tagilla_Interchange_SpawnChance() => _tagilla_Interchange_SpawnChance = 0;
    private List<string> _tagilla_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.interchange);
            }
        }
    }
    private void On_Tagilla_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Interchange_SpawnZones() => _tagilla_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.interchange };
    private void default_Tagilla_Interchange_SpawnZones() => _tagilla_Interchange_SpawnZones = new List<string>();
    #endregion
    #region TagillaLabs
    private int _tagilla_Labs_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.laboratory);
            Data.bossConfig.bossTagilla.spawnChance.laboratory = value;
        }
    }
    private void undo_Tagilla_Labs_SpawnChance() => _tagilla_Labs_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.laboratory;
    private void default_Tagilla_Labs_SpawnChance() => _tagilla_Labs_SpawnChance = 0;
    private List<string> _tagilla_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.laboratory);
            }
        }
    }
    private void On_Tagilla_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Labs_SpawnZones() => _tagilla_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.laboratory };
    private void default_Tagilla_Labs_SpawnZones() => _tagilla_Labs_SpawnZones = new List<string>();
    #endregion
    #region TagillaLighthouse
    private int _tagilla_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.lighthouse);
            Data.bossConfig.bossTagilla.spawnChance.lighthouse = value;
        }
    }
    private void undo_Tagilla_Lighthouse_SpawnChance() => _tagilla_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.lighthouse;
    private void default_Tagilla_Lighthouse_SpawnChance() => _tagilla_Lighthouse_SpawnChance = 0;
    private List<string> _tagilla_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.lighthouse);
            }
        }
    }
    private void On_Tagilla_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Lighthouse_SpawnZones() => _tagilla_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.lighthouse };
    private void default_Tagilla_Lighthouse_SpawnZones() => _tagilla_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region TagillaReserve
    private int _tagilla_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.rezervbase);
            Data.bossConfig.bossTagilla.spawnChance.rezervbase = value;
        }
    }
    private void undo_Tagilla_Reserve_SpawnChance() => _tagilla_Reserve_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.rezervbase;
    private void default_Tagilla_Reserve_SpawnChance() => _tagilla_Reserve_SpawnChance = 0;
    private List<string> _tagilla_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.rezervbase);
            }
        }
    }
    private void On_Tagilla_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Reserve_SpawnZones() => _tagilla_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.rezervbase };
    private void default_Tagilla_Reserve_SpawnZones() => _tagilla_Reserve_SpawnZones = new List<string>();
    #endregion
    #region TagillaGroundZero
    private int _tagilla_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.sandbox);
            Data.bossConfig.bossTagilla.spawnChance.sandbox = value;
        }
    }
    private void undo_Tagilla_GroundZero_SpawnChance() => _tagilla_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.sandbox;
    private void default_Tagilla_GroundZero_SpawnChance() => _tagilla_GroundZero_SpawnChance = 0;
    private List<string> _tagilla_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.sandbox);
            }
        }
    }
    private void On_Tagilla_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_GroundZero_SpawnZones() => _tagilla_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.sandbox };
    private void default_Tagilla_GroundZero_SpawnZones() => _tagilla_GroundZero_SpawnZones = new List<string>();
    private int _tagilla_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.sandbox_high);
            Data.bossConfig.bossTagilla.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Tagilla_GroundZeroHigh_SpawnChance() => _tagilla_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.sandbox_high;
    private void default_Tagilla_GroundZeroHigh_SpawnChance() => _tagilla_GroundZeroHigh_SpawnChance = 0;
    private List<string> _tagilla_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.sandbox_high);
            }
        }
    }
    private void On_Tagilla_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_GroundZeroHigh_SpawnZones() => _tagilla_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.sandbox_high };
    private void default_Tagilla_GroundZeroHigh_SpawnZones() => _tagilla_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region TagillaShoreline
    private int _tagilla_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.shoreline);
            Data.bossConfig.bossTagilla.spawnChance.shoreline = value;
        }
    }
    private void undo_Tagilla_Shoreline_SpawnChance() => _tagilla_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.shoreline;
    private void default_Tagilla_Shoreline_SpawnChance() => _tagilla_Shoreline_SpawnChance = 0;
    private List<string> _tagilla_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.shoreline);
            }
        }
    }
    private void On_Tagilla_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Shoreline_SpawnZones() => _tagilla_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.shoreline };
    private void default_Tagilla_Shoreline_SpawnZones() => _tagilla_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region TagillaStreets
    private int _tagilla_Streets_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.tarkovstreets);
            Data.bossConfig.bossTagilla.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Tagilla_Streets_SpawnChance() => _tagilla_Streets_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.tarkovstreets;
    private void default_Tagilla_Streets_SpawnChance() => _tagilla_Streets_SpawnChance = 0;
    private List<string> _tagilla_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Tagilla_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Streets_SpawnZones() => _tagilla_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.tarkovstreets };
    private void default_Tagilla_Streets_SpawnZones() => _tagilla_Streets_SpawnZones = new List<string>();
    #endregion
    #region TagillaWoods
    private int _tagilla_Woods_SpawnChance
    {
        get => Data.bossConfig.bossTagilla.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossTagilla.spawnChance.woods);
            Data.bossConfig.bossTagilla.spawnChance.woods = value;
        }
    }
    private void undo_Tagilla_Woods_SpawnChance() => _tagilla_Woods_SpawnChance = OriginalConfig.bossConfig.bossTagilla.spawnChance.woods;
    private void default_Tagilla_Woods_SpawnChance() => _tagilla_Woods_SpawnChance = 0;
    private List<string> _tagilla_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossTagilla.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossTagilla.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossTagilla.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossTagilla.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossTagilla.bossZone.woods);
            }
        }
    }
    private void On_Tagilla_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _tagilla_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Tagilla_Woods_SpawnZones() => _tagilla_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossTagilla.bossZone.woods };
    private void default_Tagilla_Woods_SpawnZones() => _tagilla_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region KillaGlobalConfig
    private bool _killa_Enabled
    {
        get => Data.bossConfig.bossKilla.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.enable);
            Data.bossConfig.bossKilla.enable = value;
        }
    }
    private void undo_Killa_Enable() => _killa_Enabled = OriginalConfig.bossConfig.bossKilla.enable;
    private void default_Killa_Enable() => _killa_Enabled = true;
    private int _killa_Time
    {
        get => Data.bossConfig.bossKilla.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.time);
            Data.bossConfig.bossKilla.time = value;
        }
    }
    private void undo_Killa_Time() => _killa_Time = OriginalConfig.bossConfig.bossKilla.time;
    private void default_Killa_Time() => _killa_Time = -1;
    #endregion
    #region KillaSpawnConfig
    #region KillaCustoms
    private int _killa_Customs_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.bigmap);
            Data.bossConfig.bossKilla.spawnChance.bigmap = value;
        }
    }
    private void undo_Killa_Customs_SpawnChance() => _killa_Customs_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.bigmap;
    private void default_Killa_Customs_SpawnChance() => _killa_Customs_SpawnChance = 0;
    private List<string> _killa_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.bigmap);
            }
        }
    }
    private void On_Killa_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Customs_SpawnZones() => _killa_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.bigmap };
    private void default_Killa_Customs_SpawnZones() => _killa_Customs_SpawnZones = new List<string>();
    #endregion
    #region KillaFactory
    private int _killa_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.factory4_day);
            Data.bossConfig.bossKilla.spawnChance.factory4_day = value;
        }
    }
    private void undo_Killa_FactoryDay_SpawnChance() => _killa_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.factory4_day;
    private void default_Killa_FactoryDay_SpawnChance() => _killa_FactoryDay_SpawnChance = 0;
    private List<string> _killa_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKilla.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.factory4_day);
            }
        }
    }
    private void On_Killa_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Killa_FactoryDay_SpawnZones() => _killa_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.factory4_day };
    private void default_Killa_FactoryDay_SpawnZones() => _killa_FactoryDay_SpawnZones = new List<string>();
    private int _killa_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.factory4_night);
            Data.bossConfig.bossKilla.spawnChance.factory4_night = value;
        }
    }
    private void undo_Killa_FactoryNight_SpawnChance() => _killa_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.factory4_night;
    private void default_Killa_FactoryNight_SpawnChance() => _killa_FactoryNight_SpawnChance = 0;
    private List<string> _killa_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKilla.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.factory4_night);
            }
        }
    }
    private void On_Killa_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Killa_FactoryNight_SpawnZones() => _killa_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.factory4_night };
    private void default_Killa_FactoryNight_SpawnZones() => _killa_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region KillaInterchange
    private int _killa_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.interchange);
            Data.bossConfig.bossKilla.spawnChance.interchange = value;
        }
    }
    private void undo_Killa_Interchange_SpawnChance() => _killa_Interchange_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.interchange;
    private void default_Killa_Interchange_SpawnChance() => _killa_Interchange_SpawnChance = 30;
    private List<string> _killa_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.interchange);
            }
        }
    }
    private void On_Killa_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Interchange_SpawnZones() => _killa_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.interchange };
    private void default_Killa_Interchange_SpawnZones() => _killa_Interchange_SpawnZones = new List<string> { "ZoneCenterBot,ZoneCenter,ZoneOLI,ZoneIDEA,ZoneGoshan" };
    #endregion
    #region KillaLabs
    private int _killa_Labs_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.laboratory);
            Data.bossConfig.bossKilla.spawnChance.laboratory = value;
        }
    }
    private void undo_Killa_Labs_SpawnChance() => _killa_Labs_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.laboratory;
    private void default_Killa_Labs_SpawnChance() => _killa_Labs_SpawnChance = 0;
    private List<string> _killa_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.laboratory);
            }
        }
    }
    private void On_Killa_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Labs_SpawnZones() => _killa_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.laboratory };
    private void default_Killa_Labs_SpawnZones() => _killa_Labs_SpawnZones = new List<string>();
    #endregion
    #region KillaLighthouse
    private int _killa_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.lighthouse);
            Data.bossConfig.bossKilla.spawnChance.lighthouse = value;
        }
    }
    private void undo_Killa_Lighthouse_SpawnChance() => _killa_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.lighthouse;
    private void default_Killa_Lighthouse_SpawnChance() => _killa_Lighthouse_SpawnChance = 0;
    private List<string> _killa_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.lighthouse);
            }
        }
    }
    private void On_Killa_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Lighthouse_SpawnZones() => _killa_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.lighthouse };
    private void default_Killa_Lighthouse_SpawnZones() => _killa_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region KillaReserve
    private int _killa_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.rezervbase);
            Data.bossConfig.bossKilla.spawnChance.rezervbase = value;
        }
    }
    private void undo_Killa_Reserve_SpawnChance() => _killa_Reserve_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.rezervbase;
    private void default_Killa_Reserve_SpawnChance() => _killa_Reserve_SpawnChance = 0;
    private List<string> _killa_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.rezervbase);
            }
        }
    }
    private void On_Killa_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Reserve_SpawnZones() => _killa_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.rezervbase };
    private void default_Killa_Reserve_SpawnZones() => _killa_Reserve_SpawnZones = new List<string>();
    #endregion
    #region KillaGroundZero
    private int _killa_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.sandbox);
            Data.bossConfig.bossKilla.spawnChance.sandbox = value;
        }
    }
    private void undo_Killa_GroundZero_SpawnChance() => _killa_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.sandbox;
    private void default_Killa_GroundZero_SpawnChance() => _killa_GroundZero_SpawnChance = 0;
    private List<string> _killa_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.sandbox);
            }
        }
    }
    private void On_Killa_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Killa_GroundZero_SpawnZones() => _killa_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.sandbox };
    private void default_Killa_GroundZero_SpawnZones() => _killa_GroundZero_SpawnZones = new List<string>();
    private int _killa_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.sandbox_high);
            Data.bossConfig.bossKilla.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Killa_GroundZeroHigh_SpawnChance() => _killa_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.sandbox_high;
    private void default_Killa_GroundZeroHigh_SpawnChance() => _killa_GroundZeroHigh_SpawnChance = 0;
    private List<string> _killa_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.sandbox_high);
            }
        }
    }
    private void On_Killa_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Killa_GroundZeroHigh_SpawnZones() => _killa_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.sandbox_high };
    private void default_Killa_GroundZeroHigh_SpawnZones() => _killa_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region KillaShoreline
    private int _killa_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.shoreline);
            Data.bossConfig.bossKilla.spawnChance.shoreline = value;
        }
    }
    private void undo_Killa_Shoreline_SpawnChance() => _killa_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.shoreline;
    private void default_Killa_Shoreline_SpawnChance() => _killa_Shoreline_SpawnChance = 0;
    private List<string> _killa_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.shoreline);
            }
        }
    }
    private void On_Killa_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Shoreline_SpawnZones() => _killa_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.shoreline };
    private void default_Killa_Shoreline_SpawnZones() => _killa_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region KillaStreets
    private int _killa_Streets_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.tarkovstreets);
            Data.bossConfig.bossKilla.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Killa_Streets_SpawnChance() => _killa_Streets_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.tarkovstreets;
    private void default_Killa_Streets_SpawnChance() => _killa_Streets_SpawnChance = 0;
    private List<string> _killa_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Killa_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Streets_SpawnZones() => _killa_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.tarkovstreets };
    private void default_Killa_Streets_SpawnZones() => _killa_Streets_SpawnZones = new List<string>();
    #endregion
    #region KillaWoods
    private int _killa_Woods_SpawnChance
    {
        get => Data.bossConfig.bossKilla.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKilla.spawnChance.woods);
            Data.bossConfig.bossKilla.spawnChance.woods = value;
        }
    }
    private void undo_Killa_Woods_SpawnChance() => _killa_Woods_SpawnChance = OriginalConfig.bossConfig.bossKilla.spawnChance.woods;
    private void default_Killa_Woods_SpawnChance() => _killa_Woods_SpawnChance = 0;
    private List<string> _killa_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKilla.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKilla.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKilla.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKilla.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKilla.bossZone.woods);
            }
        }
    }
    private void On_Killa_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _killa_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Killa_Woods_SpawnZones() => _killa_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKilla.bossZone.woods };
    private void default_Killa_Woods_SpawnZones() => _killa_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region ZryachiyGlobalConfig
    private bool _zryachiy_Enabled
    {
        get => Data.bossConfig.bossZryachiy.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.enable);
            Data.bossConfig.bossZryachiy.enable = value;
        }
    }
    private void undo_Zryachiy_Enable() => _zryachiy_Enabled = OriginalConfig.bossConfig.bossZryachiy.enable;
    private void default_Zryachiy_Enable() => _zryachiy_Enabled = true;
    private int _zryachiy_Time
    {
        get => Data.bossConfig.bossZryachiy.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.time);
            Data.bossConfig.bossZryachiy.time = value;
        }
    }
    private void undo_Zryachiy_Time() => _zryachiy_Time = OriginalConfig.bossConfig.bossZryachiy.time;
    private void default_Zryachiy_Time() => _zryachiy_Time = -1;
    #endregion
    #region ZryachiySpawnConfig
    #region ZryachiyCustoms
    private int _zryachiy_Customs_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.bigmap);
            Data.bossConfig.bossZryachiy.spawnChance.bigmap = value;
        }
    }
    private void undo_Zryachiy_Customs_SpawnChance() => _zryachiy_Customs_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.bigmap;
    private void default_Zryachiy_Customs_SpawnChance() => _zryachiy_Customs_SpawnChance = 0;
    private List<string> _zryachiy_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.bigmap);
            }
        }
    }
    private void On_Zryachiy_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Customs_SpawnZones() => _zryachiy_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.bigmap };
    private void default_Zryachiy_Customs_SpawnZones() => _zryachiy_Customs_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyFactory
    private int _zryachiy_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.factory4_day);
            Data.bossConfig.bossZryachiy.spawnChance.factory4_day = value;
        }
    }
    private void undo_Zryachiy_FactoryDay_SpawnChance() => _zryachiy_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.factory4_day;
    private void default_Zryachiy_FactoryDay_SpawnChance() => _zryachiy_FactoryDay_SpawnChance = 0;
    private List<string> _zryachiy_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossZryachiy.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.factory4_day);
            }
        }
    }
    private void On_Zryachiy_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_FactoryDay_SpawnZones() => _zryachiy_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.factory4_day };
    private void default_Zryachiy_FactoryDay_SpawnZones() => _zryachiy_FactoryDay_SpawnZones = new List<string>();
    private int _zryachiy_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.factory4_night);
            Data.bossConfig.bossZryachiy.spawnChance.factory4_night = value;
        }
    }
    private void undo_Zryachiy_FactoryNight_SpawnChance() => _zryachiy_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.factory4_night;
    private void default_Zryachiy_FactoryNight_SpawnChance() => _zryachiy_FactoryNight_SpawnChance = 0;
    private List<string> _zryachiy_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossZryachiy.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.factory4_night);
            }
        }
    }
    private void On_Zryachiy_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_FactoryNight_SpawnZones() => _zryachiy_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.factory4_night };
    private void default_Zryachiy_FactoryNight_SpawnZones() => _zryachiy_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyInterchange
    private int _zryachiy_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.interchange);
            Data.bossConfig.bossZryachiy.spawnChance.interchange = value;
        }
    }
    private void undo_Zryachiy_Interchange_SpawnChance() => _zryachiy_Interchange_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.interchange;
    private void default_Zryachiy_Interchange_SpawnChance() => _zryachiy_Interchange_SpawnChance = 0;
    private List<string> _zryachiy_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.interchange);
            }
        }
    }
    private void On_Zryachiy_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Interchange_SpawnZones() => _zryachiy_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.interchange };
    private void default_Zryachiy_Interchange_SpawnZones() => _zryachiy_Interchange_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyLabs
    private int _zryachiy_Labs_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.laboratory);
            Data.bossConfig.bossZryachiy.spawnChance.laboratory = value;
        }
    }
    private void undo_Zryachiy_Labs_SpawnChance() => _zryachiy_Labs_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.laboratory;
    private void default_Zryachiy_Labs_SpawnChance() => _zryachiy_Labs_SpawnChance = 0;
    private List<string> _zryachiy_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.laboratory);
            }
        }
    }
    private void On_Zryachiy_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Labs_SpawnZones() => _zryachiy_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.laboratory };
    private void default_Zryachiy_Labs_SpawnZones() => _zryachiy_Labs_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyLighthouse
    private int _zryachiy_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.lighthouse);
            Data.bossConfig.bossZryachiy.spawnChance.lighthouse = value;
        }
    }
    private void undo_Zryachiy_Lighthouse_SpawnChance() => _zryachiy_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.lighthouse;
    private void default_Zryachiy_Lighthouse_SpawnChance() => _zryachiy_Lighthouse_SpawnChance = 100;
    private List<string> _zryachiy_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.lighthouse);
            }
        }
    }
    private void On_Zryachiy_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Lighthouse_SpawnZones() => _zryachiy_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.lighthouse };
    private void default_Zryachiy_Lighthouse_SpawnZones() => _zryachiy_Lighthouse_SpawnZones = new List<string> { "Zone_Island" };
    #endregion
    #region ZryachiyReserve
    private int _zryachiy_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.rezervbase);
            Data.bossConfig.bossZryachiy.spawnChance.rezervbase = value;
        }
    }
    private void undo_Zryachiy_Reserve_SpawnChance() => _zryachiy_Reserve_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.rezervbase;
    private void default_Zryachiy_Reserve_SpawnChance() => _zryachiy_Reserve_SpawnChance = 0;
    private List<string> _zryachiy_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.rezervbase);
            }
        }
    }
    private void On_Zryachiy_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Reserve_SpawnZones() => _zryachiy_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.rezervbase };
    private void default_Zryachiy_Reserve_SpawnZones() => _zryachiy_Reserve_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyGroundZero
    private int _zryachiy_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.sandbox);
            Data.bossConfig.bossZryachiy.spawnChance.sandbox = value;
        }
    }
    private void undo_Zryachiy_GroundZero_SpawnChance() => _zryachiy_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.sandbox;
    private void default_Zryachiy_GroundZero_SpawnChance() => _zryachiy_GroundZero_SpawnChance = 0;
    private List<string> _zryachiy_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.sandbox);
            }
        }
    }
    private void On_Zryachiy_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_GroundZero_SpawnZones() => _zryachiy_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.sandbox };
    private void default_Zryachiy_GroundZero_SpawnZones() => _zryachiy_GroundZero_SpawnZones = new List<string>();
    private int _zryachiy_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.sandbox_high);
            Data.bossConfig.bossZryachiy.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Zryachiy_GroundZeroHigh_SpawnChance() => _zryachiy_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.sandbox_high;
    private void default_Zryachiy_GroundZeroHigh_SpawnChance() => _zryachiy_GroundZeroHigh_SpawnChance = 0;
    private List<string> _zryachiy_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.sandbox_high);
            }
        }
    }
    private void On_Zryachiy_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_GroundZeroHigh_SpawnZones() => _zryachiy_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.sandbox_high };
    private void default_Zryachiy_GroundZeroHigh_SpawnZones() => _zryachiy_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyShoreline
    private int _zryachiy_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.shoreline);
            Data.bossConfig.bossZryachiy.spawnChance.shoreline = value;
        }
    }
    private void undo_Zryachiy_Shoreline_SpawnChance() => _zryachiy_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.shoreline;
    private void default_Zryachiy_Shoreline_SpawnChance() => _zryachiy_Shoreline_SpawnChance = 0;
    private List<string> _zryachiy_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.shoreline);
            }
        }
    }
    private void On_Zryachiy_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Shoreline_SpawnZones() => _zryachiy_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.shoreline };
    private void default_Zryachiy_Shoreline_SpawnZones() => _zryachiy_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyStreets
    private int _zryachiy_Streets_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.tarkovstreets);
            Data.bossConfig.bossZryachiy.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Zryachiy_Streets_SpawnChance() => _zryachiy_Streets_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.tarkovstreets;
    private void default_Zryachiy_Streets_SpawnChance() => _zryachiy_Streets_SpawnChance = 0;
    private List<string> _zryachiy_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Zryachiy_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Streets_SpawnZones() => _zryachiy_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.tarkovstreets };
    private void default_Zryachiy_Streets_SpawnZones() => _zryachiy_Streets_SpawnZones = new List<string>();
    #endregion
    #region ZryachiyWoods
    private int _zryachiy_Woods_SpawnChance
    {
        get => Data.bossConfig.bossZryachiy.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossZryachiy.spawnChance.woods);
            Data.bossConfig.bossZryachiy.spawnChance.woods = value;
        }
    }
    private void undo_Zryachiy_Woods_SpawnChance() => _zryachiy_Woods_SpawnChance = OriginalConfig.bossConfig.bossZryachiy.spawnChance.woods;
    private void default_Zryachiy_Woods_SpawnChance() => _zryachiy_Woods_SpawnChance = 0;
    private List<string> _zryachiy_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossZryachiy.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossZryachiy.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossZryachiy.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossZryachiy.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossZryachiy.bossZone.woods);
            }
        }
    }
    private void On_Zryachiy_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _zryachiy_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Zryachiy_Woods_SpawnZones() => _zryachiy_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossZryachiy.bossZone.woods };
    private void default_Zryachiy_Woods_SpawnZones() => _zryachiy_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region GlukharGlobalConfig
    private bool _glukhar_Enabled
    {
        get => Data.bossConfig.bossGluhar.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.enable);
            Data.bossConfig.bossGluhar.enable = value;
        }
    }
    private void undo_Glukhar_Enable() => _glukhar_Enabled = OriginalConfig.bossConfig.bossGluhar.enable;
    private void default_Glukhar_Enable() => _glukhar_Enabled = true;
    private int _glukhar_Time
    {
        get => Data.bossConfig.bossGluhar.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.time);
            Data.bossConfig.bossGluhar.time = value;
        }
    }
    private void undo_Glukhar_Time() => _glukhar_Time = OriginalConfig.bossConfig.bossGluhar.time;
    private void default_Glukhar_Time() => _glukhar_Time = -1;
    #endregion
    #region GlukharSpawnConfig
    #region GlukharCustoms
    private int _glukhar_Customs_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.bigmap);
            Data.bossConfig.bossGluhar.spawnChance.bigmap = value;
        }
    }
    private void undo_Glukhar_Customs_SpawnChance() => _glukhar_Customs_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.bigmap;
    private void default_Glukhar_Customs_SpawnChance() => _glukhar_Customs_SpawnChance = 0;
    private List<string> _glukhar_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.bigmap);
            }
        }
    }
    private void On_Glukhar_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Customs_SpawnZones() => _glukhar_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.bigmap };
    private void default_Glukhar_Customs_SpawnZones() => _glukhar_Customs_SpawnZones = new List<string>();
    #endregion
    #region GlukharFactory
    private int _glukhar_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.factory4_day);
            Data.bossConfig.bossGluhar.spawnChance.factory4_day = value;
        }
    }
    private void undo_Glukhar_FactoryDay_SpawnChance() => _glukhar_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.factory4_day;
    private void default_Glukhar_FactoryDay_SpawnChance() => _glukhar_FactoryDay_SpawnChance = 0;
    private List<string> _glukhar_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossGluhar.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.factory4_day);
            }
        }
    }
    private void On_Glukhar_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_FactoryDay_SpawnZones() => _glukhar_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.factory4_day };
    private void default_Glukhar_FactoryDay_SpawnZones() => _glukhar_FactoryDay_SpawnZones = new List<string>();
    private int _glukhar_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.factory4_night);
            Data.bossConfig.bossGluhar.spawnChance.factory4_night = value;
        }
    }
    private void undo_Glukhar_FactoryNight_SpawnChance() => _glukhar_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.factory4_night;
    private void default_Glukhar_FactoryNight_SpawnChance() => _glukhar_FactoryNight_SpawnChance = 0;
    private List<string> _glukhar_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossGluhar.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.factory4_night);
            }
        }
    }
    private void On_Glukhar_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_FactoryNight_SpawnZones() => _glukhar_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.factory4_night };
    private void default_Glukhar_FactoryNight_SpawnZones() => _glukhar_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region GlukharInterchange
    private int _glukhar_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.interchange);
            Data.bossConfig.bossGluhar.spawnChance.interchange = value;
        }
    }
    private void undo_Glukhar_Interchange_SpawnChance() => _glukhar_Interchange_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.interchange;
    private void default_Glukhar_Interchange_SpawnChance() => _glukhar_Interchange_SpawnChance = 0;
    private List<string> _glukhar_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.interchange);
            }
        }
    }
    private void On_Glukhar_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Interchange_SpawnZones() => _glukhar_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.interchange };
    private void default_Glukhar_Interchange_SpawnZones() => _glukhar_Interchange_SpawnZones = new List<string>();
    #endregion
    #region GlukharLabs
    private int _glukhar_Labs_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.laboratory);
            Data.bossConfig.bossGluhar.spawnChance.laboratory = value;
        }
    }
    private void undo_Glukhar_Labs_SpawnChance() => _glukhar_Labs_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.laboratory;
    private void default_Glukhar_Labs_SpawnChance() => _glukhar_Labs_SpawnChance = 0;
    private List<string> _glukhar_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.laboratory);
            }
        }
    }
    private void On_Glukhar_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Labs_SpawnZones() => _glukhar_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.laboratory };
    private void default_Glukhar_Labs_SpawnZones() => _glukhar_Labs_SpawnZones = new List<string>();
    #endregion
    #region GlukharLighthouse
    private int _glukhar_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.lighthouse);
            Data.bossConfig.bossGluhar.spawnChance.lighthouse = value;
        }
    }
    private void undo_Glukhar_Lighthouse_SpawnChance() => _glukhar_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.lighthouse;
    private void default_Glukhar_Lighthouse_SpawnChance() => _glukhar_Lighthouse_SpawnChance = 0;
    private List<string> _glukhar_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.lighthouse);
            }
        }
    }
    private void On_Glukhar_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Lighthouse_SpawnZones() => _glukhar_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.lighthouse };
    private void default_Glukhar_Lighthouse_SpawnZones() => _glukhar_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region GlukharReserve
    private int _glukhar_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.rezervbase);
            Data.bossConfig.bossGluhar.spawnChance.rezervbase = value;
        }
    }
    private void undo_Glukhar_Reserve_SpawnChance() => _glukhar_Reserve_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.rezervbase;
    private void default_Glukhar_Reserve_SpawnChance() => _glukhar_Reserve_SpawnChance = 30;
    private List<string> _glukhar_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.rezervbase);
            }
        }
    }
    private void On_Glukhar_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Reserve_SpawnZones() => _glukhar_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.rezervbase };
    private void default_Glukhar_Reserve_SpawnZones() => _glukhar_Reserve_SpawnZones = new List<string> { "ZoneRailStrorage,ZonePTOR2,ZoneBarrack,ZoneSubStorage" };
    #endregion
    #region GlukharGroundZero
    private int _glukhar_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.sandbox);
            Data.bossConfig.bossGluhar.spawnChance.sandbox = value;
        }
    }
    private void undo_Glukhar_GroundZero_SpawnChance() => _glukhar_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.sandbox;
    private void default_Glukhar_GroundZero_SpawnChance() => _glukhar_GroundZero_SpawnChance = 0;
    private List<string> _glukhar_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.sandbox);
            }
        }
    }
    private void On_Glukhar_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_GroundZero_SpawnZones() => _glukhar_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.sandbox };
    private void default_Glukhar_GroundZero_SpawnZones() => _glukhar_GroundZero_SpawnZones = new List<string>();
    private int _glukhar_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.sandbox_high);
            Data.bossConfig.bossGluhar.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Glukhar_GroundZeroHigh_SpawnChance() => _glukhar_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.sandbox_high;
    private void default_Glukhar_GroundZeroHigh_SpawnChance() => _glukhar_GroundZeroHigh_SpawnChance = 0;
    private List<string> _glukhar_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.sandbox_high);
            }
        }
    }
    private void On_Glukhar_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_GroundZeroHigh_SpawnZones() => _glukhar_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.sandbox_high };
    private void default_Glukhar_GroundZeroHigh_SpawnZones() => _glukhar_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region GlukharShoreline
    private int _glukhar_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.shoreline);
            Data.bossConfig.bossGluhar.spawnChance.shoreline = value;
        }
    }
    private void undo_Glukhar_Shoreline_SpawnChance() => _glukhar_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.shoreline;
    private void default_Glukhar_Shoreline_SpawnChance() => _glukhar_Shoreline_SpawnChance = 0;
    private List<string> _glukhar_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.shoreline);
            }
        }
    }
    private void On_Glukhar_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Shoreline_SpawnZones() => _glukhar_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.shoreline };
    private void default_Glukhar_Shoreline_SpawnZones() => _glukhar_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region GlukharStreets
    private int _glukhar_Streets_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.tarkovstreets);
            Data.bossConfig.bossGluhar.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Glukhar_Streets_SpawnChance() => _glukhar_Streets_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.tarkovstreets;
    private void default_Glukhar_Streets_SpawnChance() => _glukhar_Streets_SpawnChance = 0;
    private List<string> _glukhar_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Glukhar_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Streets_SpawnZones() => _glukhar_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.tarkovstreets };
    private void default_Glukhar_Streets_SpawnZones() => _glukhar_Streets_SpawnZones = new List<string>();
    #endregion
    #region GlukharWoods
    private int _glukhar_Woods_SpawnChance
    {
        get => Data.bossConfig.bossGluhar.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossGluhar.spawnChance.woods);
            Data.bossConfig.bossGluhar.spawnChance.woods = value;
        }
    }
    private void undo_Glukhar_Woods_SpawnChance() => _glukhar_Woods_SpawnChance = OriginalConfig.bossConfig.bossGluhar.spawnChance.woods;
    private void default_Glukhar_Woods_SpawnChance() => _glukhar_Woods_SpawnChance = 0;
    private List<string> _glukhar_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossGluhar.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossGluhar.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossGluhar.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossGluhar.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossGluhar.bossZone.woods);
            }
        }
    }
    private void On_Glukhar_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _glukhar_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Glukhar_Woods_SpawnZones() => _glukhar_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossGluhar.bossZone.woods };
    private void default_Glukhar_Woods_SpawnZones() => _glukhar_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region SanitarGlobalConfig
    private bool _sanitar_Enabled
    {
        get => Data.bossConfig.bossSanitar.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.enable);
            Data.bossConfig.bossSanitar.enable = value;
        }
    }
    private void undo_Sanitar_Enable() => _sanitar_Enabled = OriginalConfig.bossConfig.bossSanitar.enable;
    private void default_Sanitar_Enable() => _sanitar_Enabled = true;
    private int _sanitar_Time
    {
        get => Data.bossConfig.bossSanitar.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.time);
            Data.bossConfig.bossSanitar.time = value;
        }
    }
    private void undo_Sanitar_Time() => _sanitar_Time = OriginalConfig.bossConfig.bossSanitar.time;
    private void default_Sanitar_Time() => _sanitar_Time = -1;
    #endregion
    #region SanitarSpawnConfig
    #region SanitarCustoms
    private int _sanitar_Customs_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.bigmap);
            Data.bossConfig.bossSanitar.spawnChance.bigmap = value;
        }
    }
    private void undo_Sanitar_Customs_SpawnChance() => _sanitar_Customs_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.bigmap;
    private void default_Sanitar_Customs_SpawnChance() => _sanitar_Customs_SpawnChance = 0;
    private List<string> _sanitar_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.bigmap);
            }
        }
    }
    private void On_Sanitar_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Customs_SpawnZones() => _sanitar_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.bigmap };
    private void default_Sanitar_Customs_SpawnZones() => _sanitar_Customs_SpawnZones = new List<string>();
    #endregion
    #region SanitarFactory
    private int _sanitar_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.factory4_day);
            Data.bossConfig.bossSanitar.spawnChance.factory4_day = value;
        }
    }
    private void undo_Sanitar_FactoryDay_SpawnChance() => _sanitar_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.factory4_day;
    private void default_Sanitar_FactoryDay_SpawnChance() => _sanitar_FactoryDay_SpawnChance = 0;
    private List<string> _sanitar_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossSanitar.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.factory4_day);
            }
        }
    }
    private void On_Sanitar_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_FactoryDay_SpawnZones() => _sanitar_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.factory4_day };
    private void default_Sanitar_FactoryDay_SpawnZones() => _sanitar_FactoryDay_SpawnZones = new List<string>();
    private int _sanitar_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.factory4_night);
            Data.bossConfig.bossSanitar.spawnChance.factory4_night = value;
        }
    }
    private void undo_Sanitar_FactoryNight_SpawnChance() => _sanitar_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.factory4_night;
    private void default_Sanitar_FactoryNight_SpawnChance() => _sanitar_FactoryNight_SpawnChance = 0;
    private List<string> _sanitar_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossSanitar.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.factory4_night);
            }
        }
    }
    private void On_Sanitar_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_FactoryNight_SpawnZones() => _sanitar_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.factory4_night };
    private void default_Sanitar_FactoryNight_SpawnZones() => _sanitar_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region SanitarInterchange
    private int _sanitar_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.interchange);
            Data.bossConfig.bossSanitar.spawnChance.interchange = value;
        }
    }
    private void undo_Sanitar_Interchange_SpawnChance() => _sanitar_Interchange_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.interchange;
    private void default_Sanitar_Interchange_SpawnChance() => _sanitar_Interchange_SpawnChance = 0;
    private List<string> _sanitar_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.interchange);
            }
        }
    }
    private void On_Sanitar_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Interchange_SpawnZones() => _sanitar_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.interchange };
    private void default_Sanitar_Interchange_SpawnZones() => _sanitar_Interchange_SpawnZones = new List<string>();
    #endregion
    #region SanitarLabs
    private int _sanitar_Labs_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.laboratory);
            Data.bossConfig.bossSanitar.spawnChance.laboratory = value;
        }
    }
    private void undo_Sanitar_Labs_SpawnChance() => _sanitar_Labs_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.laboratory;
    private void default_Sanitar_Labs_SpawnChance() => _sanitar_Labs_SpawnChance = 0;
    private List<string> _sanitar_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.laboratory);
            }
        }
    }
    private void On_Sanitar_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Labs_SpawnZones() => _sanitar_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.laboratory };
    private void default_Sanitar_Labs_SpawnZones() => _sanitar_Labs_SpawnZones = new List<string>();
    #endregion
    #region SanitarLighthouse
    private int _sanitar_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.lighthouse);
            Data.bossConfig.bossSanitar.spawnChance.lighthouse = value;
        }
    }
    private void undo_Sanitar_Lighthouse_SpawnChance() => _sanitar_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.lighthouse;
    private void default_Sanitar_Lighthouse_SpawnChance() => _sanitar_Lighthouse_SpawnChance = 0;
    private List<string> _sanitar_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.lighthouse);
            }
        }
    }
    private void On_Sanitar_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Lighthouse_SpawnZones() => _sanitar_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.lighthouse };
    private void default_Sanitar_Lighthouse_SpawnZones() => _sanitar_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region SanitarReserve
    private int _sanitar_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.rezervbase);
            Data.bossConfig.bossSanitar.spawnChance.rezervbase = value;
        }
    }
    private void undo_Sanitar_Reserve_SpawnChance() => _sanitar_Reserve_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.rezervbase;
    private void default_Sanitar_Reserve_SpawnChance() => _sanitar_Reserve_SpawnChance = 0;
    private List<string> _sanitar_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.rezervbase);
            }
        }
    }
    private void On_Sanitar_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Reserve_SpawnZones() => _sanitar_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.rezervbase };
    private void default_Sanitar_Reserve_SpawnZones() => _sanitar_Reserve_SpawnZones = new List<string>();
    #endregion
    #region SanitarGroundZero
    private int _sanitar_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.sandbox);
            Data.bossConfig.bossSanitar.spawnChance.sandbox = value;
        }
    }
    private void undo_Sanitar_GroundZero_SpawnChance() => _sanitar_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.sandbox;
    private void default_Sanitar_GroundZero_SpawnChance() => _sanitar_GroundZero_SpawnChance = 0;
    private List<string> _sanitar_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.sandbox);
            }
        }
    }
    private void On_Sanitar_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_GroundZero_SpawnZones() => _sanitar_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.sandbox };
    private void default_Sanitar_GroundZero_SpawnZones() => _sanitar_GroundZero_SpawnZones = new List<string>();
    private int _sanitar_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.sandbox_high);
            Data.bossConfig.bossSanitar.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Sanitar_GroundZeroHigh_SpawnChance() => _sanitar_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.sandbox_high;
    private void default_Sanitar_GroundZeroHigh_SpawnChance() => _sanitar_GroundZeroHigh_SpawnChance = 0;
    private List<string> _sanitar_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.sandbox_high);
            }
        }
    }
    private void On_Sanitar_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_GroundZeroHigh_SpawnZones() => _sanitar_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.sandbox_high };
    private void default_Sanitar_GroundZeroHigh_SpawnZones() => _sanitar_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region SanitarShoreline
    private int _sanitar_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.shoreline);
            Data.bossConfig.bossSanitar.spawnChance.shoreline = value;
        }
    }
    private void undo_Sanitar_Shoreline_SpawnChance() => _sanitar_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.shoreline;
    private void default_Sanitar_Shoreline_SpawnChance() => _sanitar_Shoreline_SpawnChance = 30;
    private List<string> _sanitar_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.shoreline);
            }
        }
    }
    private void On_Sanitar_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Shoreline_SpawnZones() => _sanitar_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.shoreline };
    private void default_Sanitar_Shoreline_SpawnZones() => _sanitar_Shoreline_SpawnZones = new List<string> { "ZoneGreenHouses,ZoneSanatorium1,ZoneGreenHouses,ZoneSanatorium2,ZonePort" };
    #endregion
    #region SanitarStreets
    private int _sanitar_Streets_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.tarkovstreets);
            Data.bossConfig.bossSanitar.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Sanitar_Streets_SpawnChance() => _sanitar_Streets_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.tarkovstreets;
    private void default_Sanitar_Streets_SpawnChance() => _sanitar_Streets_SpawnChance = 0;
    private List<string> _sanitar_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Sanitar_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Streets_SpawnZones() => _sanitar_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.tarkovstreets };
    private void default_Sanitar_Streets_SpawnZones() => _sanitar_Streets_SpawnZones = new List<string>();
    #endregion
    #region SanitarWoods
    private int _sanitar_Woods_SpawnChance
    {
        get => Data.bossConfig.bossSanitar.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossSanitar.spawnChance.woods);
            Data.bossConfig.bossSanitar.spawnChance.woods = value;
        }
    }
    private void undo_Sanitar_Woods_SpawnChance() => _sanitar_Woods_SpawnChance = OriginalConfig.bossConfig.bossSanitar.spawnChance.woods;
    private void default_Sanitar_Woods_SpawnChance() => _sanitar_Woods_SpawnChance = 0;
    private List<string> _sanitar_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossSanitar.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossSanitar.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossSanitar.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossSanitar.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossSanitar.bossZone.woods);
            }
        }
    }
    private void On_Sanitar_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _sanitar_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Sanitar_Woods_SpawnZones() => _sanitar_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossSanitar.bossZone.woods };
    private void default_Sanitar_Woods_SpawnZones() => _sanitar_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region KollontayGlobalConfig
    private bool _kollontay_Enabled
    {
        get => Data.bossConfig.bossKolontay.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.enable);
            Data.bossConfig.bossKolontay.enable = value;
        }
    }
    private void undo_Kollontay_Enable() => _kollontay_Enabled = OriginalConfig.bossConfig.bossKolontay.enable;
    private void default_Kollontay_Enable() => _kollontay_Enabled = true;
    private int _kollontay_Time
    {
        get => Data.bossConfig.bossKolontay.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.time);
            Data.bossConfig.bossKolontay.time = value;
        }
    }
    private void undo_Kollontay_Time() => _kollontay_Time = OriginalConfig.bossConfig.bossKolontay.time;
    private void default_Kollontay_Time() => _kollontay_Time = -1;
    #endregion
    #region KollontaySpawnConfig
    #region KollontayCustoms
    private int _kollontay_Customs_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.bigmap);
            Data.bossConfig.bossKolontay.spawnChance.bigmap = value;
        }
    }
    private void undo_Kollontay_Customs_SpawnChance() => _kollontay_Customs_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.bigmap;
    private void default_Kollontay_Customs_SpawnChance() => _kollontay_Customs_SpawnChance = 0;
    private List<string> _kollontay_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.bigmap);
            }
        }
    }
    private void On_Kollontay_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Customs_SpawnZones() => _kollontay_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.bigmap };
    private void default_Kollontay_Customs_SpawnZones() => _kollontay_Customs_SpawnZones = new List<string>();
    #endregion
    #region KollontayFactory
    private int _kollontay_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.factory4_day);
            Data.bossConfig.bossKolontay.spawnChance.factory4_day = value;
        }
    }
    private void undo_Kollontay_FactoryDay_SpawnChance() => _kollontay_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.factory4_day;
    private void default_Kollontay_FactoryDay_SpawnChance() => _kollontay_FactoryDay_SpawnChance = 0;
    private List<string> _kollontay_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKolontay.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.factory4_day);
            }
        }
    }
    private void On_Kollontay_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_FactoryDay_SpawnZones() => _kollontay_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.factory4_day };
    private void default_Kollontay_FactoryDay_SpawnZones() => _kollontay_FactoryDay_SpawnZones = new List<string>();
    private int _kollontay_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.factory4_night);
            Data.bossConfig.bossKolontay.spawnChance.factory4_night = value;
        }
    }
    private void undo_Kollontay_FactoryNight_SpawnChance() => _kollontay_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.factory4_night;
    private void default_Kollontay_FactoryNight_SpawnChance() => _kollontay_FactoryNight_SpawnChance = 0;
    private List<string> _kollontay_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKolontay.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.factory4_night);
            }
        }
    }
    private void On_Kollontay_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_FactoryNight_SpawnZones() => _kollontay_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.factory4_night };
    private void default_Kollontay_FactoryNight_SpawnZones() => _kollontay_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region KollontayInterchange
    private int _kollontay_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.interchange);
            Data.bossConfig.bossKolontay.spawnChance.interchange = value;
        }
    }
    private void undo_Kollontay_Interchange_SpawnChance() => _kollontay_Interchange_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.interchange;
    private void default_Kollontay_Interchange_SpawnChance() => _kollontay_Interchange_SpawnChance = 0;
    private List<string> _kollontay_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.interchange);
            }
        }
    }
    private void On_Kollontay_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Interchange_SpawnZones() => _kollontay_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.interchange };
    private void default_Kollontay_Interchange_SpawnZones() => _kollontay_Interchange_SpawnZones = new List<string>();
    #endregion
    #region KollontayLabs
    private int _kollontay_Labs_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.laboratory);
            Data.bossConfig.bossKolontay.spawnChance.laboratory = value;
        }
    }
    private void undo_Kollontay_Labs_SpawnChance() => _kollontay_Labs_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.laboratory;
    private void default_Kollontay_Labs_SpawnChance() => _kollontay_Labs_SpawnChance = 0;
    private List<string> _kollontay_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.laboratory);
            }
        }
    }
    private void On_Kollontay_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Labs_SpawnZones() => _kollontay_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.laboratory };
    private void default_Kollontay_Labs_SpawnZones() => _kollontay_Labs_SpawnZones = new List<string>();
    #endregion
    #region KollontayLighthouse
    private int _kollontay_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.lighthouse);
            Data.bossConfig.bossKolontay.spawnChance.lighthouse = value;
        }
    }
    private void undo_Kollontay_Lighthouse_SpawnChance() => _kollontay_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.lighthouse;
    private void default_Kollontay_Lighthouse_SpawnChance() => _kollontay_Lighthouse_SpawnChance = 0;
    private List<string> _kollontay_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.lighthouse);
            }
        }
    }
    private void On_Kollontay_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Lighthouse_SpawnZones() => _kollontay_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.lighthouse };
    private void default_Kollontay_Lighthouse_SpawnZones() => _kollontay_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region KollontayReserve
    private int _kollontay_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.rezervbase);
            Data.bossConfig.bossKolontay.spawnChance.rezervbase = value;
        }
    }
    private void undo_Kollontay_Reserve_SpawnChance() => _kollontay_Reserve_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.rezervbase;
    private void default_Kollontay_Reserve_SpawnChance() => _kollontay_Reserve_SpawnChance = 0;
    private List<string> _kollontay_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.rezervbase);
            }
        }
    }
    private void On_Kollontay_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Reserve_SpawnZones() => _kollontay_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.rezervbase };
    private void default_Kollontay_Reserve_SpawnZones() => _kollontay_Reserve_SpawnZones = new List<string>();
    #endregion
    #region KollontayGroundZero
    private int _kollontay_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.sandbox);
            Data.bossConfig.bossKolontay.spawnChance.sandbox = value;
        }
    }
    private void undo_Kollontay_GroundZero_SpawnChance() => _kollontay_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.sandbox;
    private void default_Kollontay_GroundZero_SpawnChance() => _kollontay_GroundZero_SpawnChance = 0;
    private List<string> _kollontay_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.sandbox);
            }
        }
    }
    private void On_Kollontay_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_GroundZero_SpawnZones() => _kollontay_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.sandbox };
    private void default_Kollontay_GroundZero_SpawnZones() => _kollontay_GroundZero_SpawnZones = new List<string>();
    private int _kollontay_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.sandbox_high);
            Data.bossConfig.bossKolontay.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Kollontay_GroundZeroHigh_SpawnChance() => _kollontay_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.sandbox_high;
    private void default_Kollontay_GroundZeroHigh_SpawnChance() => _kollontay_GroundZeroHigh_SpawnChance = 30;
    private List<string> _kollontay_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.sandbox_high);
            }
        }
    }
    private void On_Kollontay_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_GroundZeroHigh_SpawnZones() => _kollontay_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.sandbox_high };
    private void default_Kollontay_GroundZeroHigh_SpawnZones() => _kollontay_GroundZeroHigh_SpawnZones = new List<string> { "ZoneSandbox" };
    #endregion
    #region KollontayShoreline
    private int _kollontay_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.shoreline);
            Data.bossConfig.bossKolontay.spawnChance.shoreline = value;
        }
    }
    private void undo_Kollontay_Shoreline_SpawnChance() => _kollontay_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.shoreline;
    private void default_Kollontay_Shoreline_SpawnChance() => _kollontay_Shoreline_SpawnChance = 0;
    private List<string> _kollontay_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.shoreline);
            }
        }
    }
    private void On_Kollontay_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Shoreline_SpawnZones() => _kollontay_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.shoreline };
    private void default_Kollontay_Shoreline_SpawnZones() => _kollontay_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region KollontayStreets
    private int _kollontay_Streets_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.tarkovstreets);
            Data.bossConfig.bossKolontay.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Kollontay_Streets_SpawnChance() => _kollontay_Streets_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.tarkovstreets;
    private void default_Kollontay_Streets_SpawnChance() => _kollontay_Streets_SpawnChance = 30;
    private List<string> _kollontay_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Kollontay_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Streets_SpawnZones() => _kollontay_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.tarkovstreets };
    private void default_Kollontay_Streets_SpawnZones() => _kollontay_Streets_SpawnZones = new List<string> { "ZoneClimova,ZoneMvd" };
    #endregion
    #region KollontayWoods
    private int _kollontay_Woods_SpawnChance
    {
        get => Data.bossConfig.bossKolontay.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKolontay.spawnChance.woods);
            Data.bossConfig.bossKolontay.spawnChance.woods = value;
        }
    }
    private void undo_Kollontay_Woods_SpawnChance() => _kollontay_Woods_SpawnChance = OriginalConfig.bossConfig.bossKolontay.spawnChance.woods;
    private void default_Kollontay_Woods_SpawnChance() => _kollontay_Woods_SpawnChance = 0;
    private List<string> _kollontay_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKolontay.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKolontay.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKolontay.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKolontay.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKolontay.bossZone.woods);
            }
        }
    }
    private void On_Kollontay_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kollontay_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Kollontay_Woods_SpawnZones() => _kollontay_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKolontay.bossZone.woods };
    private void default_Kollontay_Woods_SpawnZones() => _kollontay_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region KabanGlobalConfig
    private bool _kaban_Enabled
    {
        get => Data.bossConfig.bossBoar.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.enable);
            Data.bossConfig.bossBoar.enable = value;
        }
    }
    private void undo_Kaban_Enable() => _kaban_Enabled = OriginalConfig.bossConfig.bossBoar.enable;
    private void default_Kaban_Enable() => _kaban_Enabled = true;
    private int _kaban_Time
    {
        get => Data.bossConfig.bossBoar.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.time);
            Data.bossConfig.bossBoar.time = value;
        }
    }
    private void undo_Kaban_Time() => _kaban_Time = OriginalConfig.bossConfig.bossBoar.time;
    private void default_Kaban_Time() => _kaban_Time = -1;
    #endregion
    #region KabanSpawnConfig
    #region KabanCustoms
    private int _kaban_Customs_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.bigmap);
            Data.bossConfig.bossBoar.spawnChance.bigmap = value;
        }
    }
    private void undo_Kaban_Customs_SpawnChance() => _kaban_Customs_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.bigmap;
    private void default_Kaban_Customs_SpawnChance() => _kaban_Customs_SpawnChance = 0;
    private List<string> _kaban_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.bigmap);
            }
        }
    }
    private void On_Kaban_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Customs_SpawnZones() => _kaban_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.bigmap };
    private void default_Kaban_Customs_SpawnZones() => _kaban_Customs_SpawnZones = new List<string>();
    #endregion
    #region KabanFactory
    private int _kaban_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.factory4_day);
            Data.bossConfig.bossBoar.spawnChance.factory4_day = value;
        }
    }
    private void undo_Kaban_FactoryDay_SpawnChance() => _kaban_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.factory4_day;
    private void default_Kaban_FactoryDay_SpawnChance() => _kaban_FactoryDay_SpawnChance = 0;
    private List<string> _kaban_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossBoar.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.factory4_day);
            }
        }
    }
    private void On_Kaban_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_FactoryDay_SpawnZones() => _kaban_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.factory4_day };
    private void default_Kaban_FactoryDay_SpawnZones() => _kaban_FactoryDay_SpawnZones = new List<string>();
    private int _kaban_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.factory4_night);
            Data.bossConfig.bossBoar.spawnChance.factory4_night = value;
        }
    }
    private void undo_Kaban_FactoryNight_SpawnChance() => _kaban_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.factory4_night;
    private void default_Kaban_FactoryNight_SpawnChance() => _kaban_FactoryNight_SpawnChance = 0;
    private List<string> _kaban_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossBoar.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.factory4_night);
            }
        }
    }
    private void On_Kaban_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_FactoryNight_SpawnZones() => _kaban_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.factory4_night };
    private void default_Kaban_FactoryNight_SpawnZones() => _kaban_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region KabanInterchange
    private int _kaban_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.interchange);
            Data.bossConfig.bossBoar.spawnChance.interchange = value;
        }
    }
    private void undo_Kaban_Interchange_SpawnChance() => _kaban_Interchange_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.interchange;
    private void default_Kaban_Interchange_SpawnChance() => _kaban_Interchange_SpawnChance = 0;
    private List<string> _kaban_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.interchange);
            }
        }
    }
    private void On_Kaban_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Interchange_SpawnZones() => _kaban_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.interchange };
    private void default_Kaban_Interchange_SpawnZones() => _kaban_Interchange_SpawnZones = new List<string>();
    #endregion
    #region KabanLabs
    private int _kaban_Labs_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.laboratory);
            Data.bossConfig.bossBoar.spawnChance.laboratory = value;
        }
    }
    private void undo_Kaban_Labs_SpawnChance() => _kaban_Labs_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.laboratory;
    private void default_Kaban_Labs_SpawnChance() => _kaban_Labs_SpawnChance = 0;
    private List<string> _kaban_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.laboratory);
            }
        }
    }
    private void On_Kaban_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Labs_SpawnZones() => _kaban_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.laboratory };
    private void default_Kaban_Labs_SpawnZones() => _kaban_Labs_SpawnZones = new List<string>();
    #endregion
    #region KabanLighthouse
    private int _kaban_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.lighthouse);
            Data.bossConfig.bossBoar.spawnChance.lighthouse = value;
        }
    }
    private void undo_Kaban_Lighthouse_SpawnChance() => _kaban_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.lighthouse;
    private void default_Kaban_Lighthouse_SpawnChance() => _kaban_Lighthouse_SpawnChance = 0;
    private List<string> _kaban_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.lighthouse);
            }
        }
    }
    private void On_Kaban_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Lighthouse_SpawnZones() => _kaban_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.lighthouse };
    private void default_Kaban_Lighthouse_SpawnZones() => _kaban_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region KabanReserve
    private int _kaban_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.rezervbase);
            Data.bossConfig.bossBoar.spawnChance.rezervbase = value;
        }
    }
    private void undo_Kaban_Reserve_SpawnChance() => _kaban_Reserve_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.rezervbase;
    private void default_Kaban_Reserve_SpawnChance() => _kaban_Reserve_SpawnChance = 0;
    private List<string> _kaban_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.rezervbase);
            }
        }
    }
    private void On_Kaban_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Reserve_SpawnZones() => _kaban_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.rezervbase };
    private void default_Kaban_Reserve_SpawnZones() => _kaban_Reserve_SpawnZones = new List<string>();
    #endregion
    #region KabanGroundZero
    private int _kaban_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.sandbox);
            Data.bossConfig.bossBoar.spawnChance.sandbox = value;
        }
    }
    private void undo_Kaban_GroundZero_SpawnChance() => _kaban_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.sandbox;
    private void default_Kaban_GroundZero_SpawnChance() => _kaban_GroundZero_SpawnChance = 0;
    private List<string> _kaban_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.sandbox);
            }
        }
    }
    private void On_Kaban_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_GroundZero_SpawnZones() => _kaban_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.sandbox };
    private void default_Kaban_GroundZero_SpawnZones() => _kaban_GroundZero_SpawnZones = new List<string>();
    private int _kaban_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.sandbox_high);
            Data.bossConfig.bossBoar.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Kaban_GroundZeroHigh_SpawnChance() => _kaban_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.sandbox_high;
    private void default_Kaban_GroundZeroHigh_SpawnChance() => _kaban_GroundZeroHigh_SpawnChance = 0;
    private List<string> _kaban_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.sandbox_high);
            }
        }
    }
    private void On_Kaban_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_GroundZeroHigh_SpawnZones() => _kaban_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.sandbox_high };
    private void default_Kaban_GroundZeroHigh_SpawnZones() => _kaban_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region KabanShoreline
    private int _kaban_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.shoreline);
            Data.bossConfig.bossBoar.spawnChance.shoreline = value;
        }
    }
    private void undo_Kaban_Shoreline_SpawnChance() => _kaban_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.shoreline;
    private void default_Kaban_Shoreline_SpawnChance() => _kaban_Shoreline_SpawnChance = 0;
    private List<string> _kaban_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.shoreline);
            }
        }
    }
    private void On_Kaban_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Shoreline_SpawnZones() => _kaban_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.shoreline };
    private void default_Kaban_Shoreline_SpawnZones() => _kaban_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region KabanStreets
    private int _kaban_Streets_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.tarkovstreets);
            Data.bossConfig.bossBoar.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Kaban_Streets_SpawnChance() => _kaban_Streets_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.tarkovstreets;
    private void default_Kaban_Streets_SpawnChance() => _kaban_Streets_SpawnChance = 30;
    private List<string> _kaban_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Kaban_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Streets_SpawnZones() => _kaban_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.tarkovstreets };
    private void default_Kaban_Streets_SpawnZones() => _kaban_Streets_SpawnZones = new List<string> { "ZoneCarShowroom" };
    #endregion
    #region KabanWoods
    private int _kaban_Woods_SpawnChance
    {
        get => Data.bossConfig.bossBoar.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossBoar.spawnChance.woods);
            Data.bossConfig.bossBoar.spawnChance.woods = value;
        }
    }
    private void undo_Kaban_Woods_SpawnChance() => _kaban_Woods_SpawnChance = OriginalConfig.bossConfig.bossBoar.spawnChance.woods;
    private void default_Kaban_Woods_SpawnChance() => _kaban_Woods_SpawnChance = 0;
    private List<string> _kaban_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossBoar.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossBoar.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossBoar.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossBoar.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossBoar.bossZone.woods);
            }
        }
    }
    private void On_Kaban_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _kaban_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Kaban_Woods_SpawnZones() => _kaban_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossBoar.bossZone.woods };
    private void default_Kaban_Woods_SpawnZones() => _kaban_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region ShturmanGlobalConfig
    private bool _shturman_Enabled
    {
        get => Data.bossConfig.bossKojaniy.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.enable);
            Data.bossConfig.bossKojaniy.enable = value;
        }
    }
    private void undo_Shturman_Enable() => _shturman_Enabled = OriginalConfig.bossConfig.bossKojaniy.enable;
    private void default_Shturman_Enable() => _shturman_Enabled = true;
    private int _shturman_Time
    {
        get => Data.bossConfig.bossKojaniy.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.time);
            Data.bossConfig.bossKojaniy.time = value;
        }
    }
    private void undo_Shturman_Time() => _shturman_Time = OriginalConfig.bossConfig.bossKojaniy.time;
    private void default_Shturman_Time() => _shturman_Time = -1;
    #endregion
    #region ShturmanSpawnConfig
    #region ShturmanCustoms
    private int _shturman_Customs_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.bigmap);
            Data.bossConfig.bossKojaniy.spawnChance.bigmap = value;
        }
    }
    private void undo_Shturman_Customs_SpawnChance() => _shturman_Customs_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.bigmap;
    private void default_Shturman_Customs_SpawnChance() => _shturman_Customs_SpawnChance = 0;
    private List<string> _shturman_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.bigmap);
            }
        }
    }
    private void On_Shturman_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Customs_SpawnZones() => _shturman_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.bigmap };
    private void default_Shturman_Customs_SpawnZones() => _shturman_Customs_SpawnZones = new List<string>();
    #endregion
    #region ShturmanFactory
    private int _shturman_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.factory4_day);
            Data.bossConfig.bossKojaniy.spawnChance.factory4_day = value;
        }
    }
    private void undo_Shturman_FactoryDay_SpawnChance() => _shturman_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.factory4_day;
    private void default_Shturman_FactoryDay_SpawnChance() => _shturman_FactoryDay_SpawnChance = 0;
    private List<string> _shturman_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKojaniy.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.factory4_day);
            }
        }
    }
    private void On_Shturman_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_FactoryDay_SpawnZones() => _shturman_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.factory4_day };
    private void default_Shturman_FactoryDay_SpawnZones() => _shturman_FactoryDay_SpawnZones = new List<string>();
    private int _shturman_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.factory4_night);
            Data.bossConfig.bossKojaniy.spawnChance.factory4_night = value;
        }
    }
    private void undo_Shturman_FactoryNight_SpawnChance() => _shturman_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.factory4_night;
    private void default_Shturman_FactoryNight_SpawnChance() => _shturman_FactoryNight_SpawnChance = 0;
    private List<string> _shturman_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossKojaniy.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.factory4_night);
            }
        }
    }
    private void On_Shturman_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_FactoryNight_SpawnZones() => _shturman_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.factory4_night };
    private void default_Shturman_FactoryNight_SpawnZones() => _shturman_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region ShturmanInterchange
    private int _shturman_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.interchange);
            Data.bossConfig.bossKojaniy.spawnChance.interchange = value;
        }
    }
    private void undo_Shturman_Interchange_SpawnChance() => _shturman_Interchange_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.interchange;
    private void default_Shturman_Interchange_SpawnChance() => _shturman_Interchange_SpawnChance = 0;
    private List<string> _shturman_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.interchange);
            }
        }
    }
    private void On_Shturman_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Interchange_SpawnZones() => _shturman_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.interchange };
    private void default_Shturman_Interchange_SpawnZones() => _shturman_Interchange_SpawnZones = new List<string>();
    #endregion
    #region ShturmanLabs
    private int _shturman_Labs_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.laboratory);
            Data.bossConfig.bossKojaniy.spawnChance.laboratory = value;
        }
    }
    private void undo_Shturman_Labs_SpawnChance() => _shturman_Labs_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.laboratory;
    private void default_Shturman_Labs_SpawnChance() => _shturman_Labs_SpawnChance = 0;
    private List<string> _shturman_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.laboratory);
            }
        }
    }
    private void On_Shturman_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Labs_SpawnZones() => _shturman_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.laboratory };
    private void default_Shturman_Labs_SpawnZones() => _shturman_Labs_SpawnZones = new List<string>();
    #endregion
    #region ShturmanLighthouse
    private int _shturman_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.lighthouse);
            Data.bossConfig.bossKojaniy.spawnChance.lighthouse = value;
        }
    }
    private void undo_Shturman_Lighthouse_SpawnChance() => _shturman_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.lighthouse;
    private void default_Shturman_Lighthouse_SpawnChance() => _shturman_Lighthouse_SpawnChance = 0;
    private List<string> _shturman_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.lighthouse);
            }
        }
    }
    private void On_Shturman_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Lighthouse_SpawnZones() => _shturman_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.lighthouse };
    private void default_Shturman_Lighthouse_SpawnZones() => _shturman_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region ShturmanReserve
    private int _shturman_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.rezervbase);
            Data.bossConfig.bossKojaniy.spawnChance.rezervbase = value;
        }
    }
    private void undo_Shturman_Reserve_SpawnChance() => _shturman_Reserve_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.rezervbase;
    private void default_Shturman_Reserve_SpawnChance() => _shturman_Reserve_SpawnChance = 0;
    private List<string> _shturman_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.rezervbase);
            }
        }
    }
    private void On_Shturman_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Reserve_SpawnZones() => _shturman_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.rezervbase };
    private void default_Shturman_Reserve_SpawnZones() => _shturman_Reserve_SpawnZones = new List<string>();
    #endregion
    #region ShturmanGroundZero
    private int _shturman_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.sandbox);
            Data.bossConfig.bossKojaniy.spawnChance.sandbox = value;
        }
    }
    private void undo_Shturman_GroundZero_SpawnChance() => _shturman_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.sandbox;
    private void default_Shturman_GroundZero_SpawnChance() => _shturman_GroundZero_SpawnChance = 0;
    private List<string> _shturman_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.sandbox);
            }
        }
    }
    private void On_Shturman_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_GroundZero_SpawnZones() => _shturman_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.sandbox };
    private void default_Shturman_GroundZero_SpawnZones() => _shturman_GroundZero_SpawnZones = new List<string>();
    private int _shturman_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.sandbox_high);
            Data.bossConfig.bossKojaniy.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Shturman_GroundZeroHigh_SpawnChance() => _shturman_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.sandbox_high;
    private void default_Shturman_GroundZeroHigh_SpawnChance() => _shturman_GroundZeroHigh_SpawnChance = 0;
    private List<string> _shturman_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.sandbox_high);
            }
        }
    }
    private void On_Shturman_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_GroundZeroHigh_SpawnZones() => _shturman_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.sandbox_high };
    private void default_Shturman_GroundZeroHigh_SpawnZones() => _shturman_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region ShturmanShoreline
    private int _shturman_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.shoreline);
            Data.bossConfig.bossKojaniy.spawnChance.shoreline = value;
        }
    }
    private void undo_Shturman_Shoreline_SpawnChance() => _shturman_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.shoreline;
    private void default_Shturman_Shoreline_SpawnChance() => _shturman_Shoreline_SpawnChance = 0;
    private List<string> _shturman_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.shoreline);
            }
        }
    }
    private void On_Shturman_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Shoreline_SpawnZones() => _shturman_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.shoreline };
    private void default_Shturman_Shoreline_SpawnZones() => _shturman_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region ShturmanStreets
    private int _shturman_Streets_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.tarkovstreets);
            Data.bossConfig.bossKojaniy.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Shturman_Streets_SpawnChance() => _shturman_Streets_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.tarkovstreets;
    private void default_Shturman_Streets_SpawnChance() => _shturman_Streets_SpawnChance = 0;
    private List<string> _shturman_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Shturman_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Streets_SpawnZones() => _shturman_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.tarkovstreets };
    private void default_Shturman_Streets_SpawnZones() => _shturman_Streets_SpawnZones = new List<string>();
    #endregion
    #region ShturmanWoods
    private int _shturman_Woods_SpawnChance
    {
        get => Data.bossConfig.bossKojaniy.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossKojaniy.spawnChance.woods);
            Data.bossConfig.bossKojaniy.spawnChance.woods = value;
        }
    }
    private void undo_Shturman_Woods_SpawnChance() => _shturman_Woods_SpawnChance = OriginalConfig.bossConfig.bossKojaniy.spawnChance.woods;
    private void default_Shturman_Woods_SpawnChance() => _shturman_Woods_SpawnChance = 30;
    private List<string> _shturman_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossKojaniy.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossKojaniy.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossKojaniy.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossKojaniy.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossKojaniy.bossZone.woods);
            }
        }
    }
    private void On_Shturman_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _shturman_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Shturman_Woods_SpawnZones() => _shturman_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossKojaniy.bossZone.woods };
    private void default_Shturman_Woods_SpawnZones() => _shturman_Woods_SpawnZones = new List<string> { "ZoneWoodCutter" };
    #endregion
    #endregion

    #region PartisanGlobalConfig
    private bool _partisan_Enabled
    {
        get => Data.bossConfig.bossPartisan.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.enable);
            Data.bossConfig.bossPartisan.enable = value;
        }
    }
    private void undo_Partisan_Enable() => _partisan_Enabled = OriginalConfig.bossConfig.bossPartisan.enable;
    private void default_Partisan_Enable() => _partisan_Enabled = true;
    private int _partisan_Time
    {
        get => Data.bossConfig.bossPartisan.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.time);
            Data.bossConfig.bossPartisan.time = value;
        }
    }
    private void undo_Partisan_Time() => _partisan_Time = OriginalConfig.bossConfig.bossPartisan.time;
    private void default_Partisan_Time() => _partisan_Time = -1;
    #endregion
    #region PartisanSpawnConfig
    #region PartisanCustoms
    private int _partisan_Customs_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.bigmap);
            Data.bossConfig.bossPartisan.spawnChance.bigmap = value;
        }
    }
    private void undo_Partisan_Customs_SpawnChance() => _partisan_Customs_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.bigmap;
    private void default_Partisan_Customs_SpawnChance() => _partisan_Customs_SpawnChance = 30;
    private List<string> _partisan_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.bigmap);
            }
        }
    }
    private void On_Partisan_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Customs_SpawnZones() => _partisan_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.bigmap };
    private void default_Partisan_Customs_SpawnZones() => _partisan_Customs_SpawnZones = new List<string>();
    #endregion
    #region PartisanFactory
    private int _partisan_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.factory4_day);
            Data.bossConfig.bossPartisan.spawnChance.factory4_day = value;
        }
    }
    private void undo_Partisan_FactoryDay_SpawnChance() => _partisan_FactoryDay_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.factory4_day;
    private void default_Partisan_FactoryDay_SpawnChance() => _partisan_FactoryDay_SpawnChance = 0;
    private List<string> _partisan_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossPartisan.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.factory4_day);
            }
        }
    }
    private void On_Partisan_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_FactoryDay_SpawnZones() => _partisan_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.factory4_day };
    private void default_Partisan_FactoryDay_SpawnZones() => _partisan_FactoryDay_SpawnZones = new List<string>();
    private int _partisan_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.factory4_night);
            Data.bossConfig.bossPartisan.spawnChance.factory4_night = value;
        }
    }
    private void undo_Partisan_FactoryNight_SpawnChance() => _partisan_FactoryNight_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.factory4_night;
    private void default_Partisan_FactoryNight_SpawnChance() => _partisan_FactoryNight_SpawnChance = 0;
    private List<string> _partisan_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.bossPartisan.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.factory4_night);
            }
        }
    }
    private void On_Partisan_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_FactoryNight_SpawnZones() => _partisan_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.factory4_night };
    private void default_Partisan_FactoryNight_SpawnZones() => _partisan_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region PartisanInterchange
    private int _partisan_Interchange_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.interchange);
            Data.bossConfig.bossPartisan.spawnChance.interchange = value;
        }
    }
    private void undo_Partisan_Interchange_SpawnChance() => _partisan_Interchange_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.interchange;
    private void default_Partisan_Interchange_SpawnChance() => _partisan_Interchange_SpawnChance = 0;
    private List<string> _partisan_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.interchange);
            }
        }
    }
    private void On_Partisan_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Interchange_SpawnZones() => _partisan_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.interchange };
    private void default_Partisan_Interchange_SpawnZones() => _partisan_Interchange_SpawnZones = new List<string>();
    #endregion
    #region PartisanLabs
    private int _partisan_Labs_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.laboratory);
            Data.bossConfig.bossPartisan.spawnChance.laboratory = value;
        }
    }
    private void undo_Partisan_Labs_SpawnChance() => _partisan_Labs_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.laboratory;
    private void default_Partisan_Labs_SpawnChance() => _partisan_Labs_SpawnChance = 0;
    private List<string> _partisan_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.laboratory);
            }
        }
    }
    private void On_Partisan_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Labs_SpawnZones() => _partisan_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.laboratory };
    private void default_Partisan_Labs_SpawnZones() => _partisan_Labs_SpawnZones = new List<string>();
    #endregion
    #region PartisanLighthouse
    private int _partisan_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.lighthouse);
            Data.bossConfig.bossPartisan.spawnChance.lighthouse = value;
        }
    }
    private void undo_Partisan_Lighthouse_SpawnChance() => _partisan_Lighthouse_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.lighthouse;
    private void default_Partisan_Lighthouse_SpawnChance() => _partisan_Lighthouse_SpawnChance = 30;
    private List<string> _partisan_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.lighthouse);
            }
        }
    }
    private void On_Partisan_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Lighthouse_SpawnZones() => _partisan_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.lighthouse };
    private void default_Partisan_Lighthouse_SpawnZones() => _partisan_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region PartisanReserve
    private int _partisan_Reserve_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.rezervbase);
            Data.bossConfig.bossPartisan.spawnChance.rezervbase = value;
        }
    }
    private void undo_Partisan_Reserve_SpawnChance() => _partisan_Reserve_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.rezervbase;
    private void default_Partisan_Reserve_SpawnChance() => _partisan_Reserve_SpawnChance = 0;
    private List<string> _partisan_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.rezervbase);
            }
        }
    }
    private void On_Partisan_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Reserve_SpawnZones() => _partisan_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.rezervbase };
    private void default_Partisan_Reserve_SpawnZones() => _partisan_Reserve_SpawnZones = new List<string>();
    #endregion
    #region PartisanGroundZero
    private int _partisan_GroundZero_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.sandbox);
            Data.bossConfig.bossPartisan.spawnChance.sandbox = value;
        }
    }
    private void undo_Partisan_GroundZero_SpawnChance() => _partisan_GroundZero_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.sandbox;
    private void default_Partisan_GroundZero_SpawnChance() => _partisan_GroundZero_SpawnChance = 0;
    private List<string> _partisan_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.sandbox);
            }
        }
    }
    private void On_Partisan_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_GroundZero_SpawnZones() => _partisan_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.sandbox };
    private void default_Partisan_GroundZero_SpawnZones() => _partisan_GroundZero_SpawnZones = new List<string>();
    private int _partisan_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.sandbox_high);
            Data.bossConfig.bossPartisan.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Partisan_GroundZeroHigh_SpawnChance() => _partisan_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.sandbox_high;
    private void default_Partisan_GroundZeroHigh_SpawnChance() => _partisan_GroundZeroHigh_SpawnChance = 0;
    private List<string> _partisan_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.sandbox_high);
            }
        }
    }
    private void On_Partisan_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_GroundZeroHigh_SpawnZones() => _partisan_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.sandbox_high };
    private void default_Partisan_GroundZeroHigh_SpawnZones() => _partisan_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region PartisanShoreline
    private int _partisan_Shoreline_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.shoreline);
            Data.bossConfig.bossPartisan.spawnChance.shoreline = value;
        }
    }
    private void undo_Partisan_Shoreline_SpawnChance() => _partisan_Shoreline_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.shoreline;
    private void default_Partisan_Shoreline_SpawnChance() => _partisan_Shoreline_SpawnChance = 30;
    private List<string> _partisan_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.shoreline);
            }
        }
    }
    private void On_Partisan_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Shoreline_SpawnZones() => _partisan_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.shoreline };
    private void default_Partisan_Shoreline_SpawnZones() => _partisan_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region PartisanStreets
    private int _partisan_Streets_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.tarkovstreets);
            Data.bossConfig.bossPartisan.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Partisan_Streets_SpawnChance() => _partisan_Streets_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.tarkovstreets;
    private void default_Partisan_Streets_SpawnChance() => _partisan_Streets_SpawnChance = 0;
    private List<string> _partisan_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Partisan_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Streets_SpawnZones() => _partisan_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.tarkovstreets };
    private void default_Partisan_Streets_SpawnZones() => _partisan_Streets_SpawnZones = new List<string>();
    #endregion
    #region PartisanWoods
    private int _partisan_Woods_SpawnChance
    {
        get => Data.bossConfig.bossPartisan.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.bossPartisan.spawnChance.woods);
            Data.bossConfig.bossPartisan.spawnChance.woods = value;
        }
    }
    private void undo_Partisan_Woods_SpawnChance() => _partisan_Woods_SpawnChance = OriginalConfig.bossConfig.bossPartisan.spawnChance.woods;
    private void default_Partisan_Woods_SpawnChance() => _partisan_Woods_SpawnChance = 30;
    private List<string> _partisan_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.bossPartisan.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.bossPartisan.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.bossPartisan.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.bossPartisan.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.bossPartisan.bossZone.woods);
            }
        }
    }
    private void On_Partisan_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _partisan_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Partisan_Woods_SpawnZones() => _partisan_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.bossPartisan.bossZone.woods };
    private void default_Partisan_Woods_SpawnZones() => _partisan_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region CultistGlobalConfig
    private bool _cultist_Enabled
    {
        get => Data.bossConfig.sectantPriest.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.enable);
            Data.bossConfig.sectantPriest.enable = value;
        }
    }
    private void undo_Cultist_Enable() => _cultist_Enabled = OriginalConfig.bossConfig.sectantPriest.enable;
    private void default_Cultist_Enable() => _cultist_Enabled = true;
    private int _cultist_Time
    {
        get => Data.bossConfig.sectantPriest.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.time);
            Data.bossConfig.sectantPriest.time = value;
        }
    }
    private void undo_Cultist_Time() => _cultist_Time = OriginalConfig.bossConfig.sectantPriest.time;
    private void default_Cultist_Time() => _cultist_Time = -1;
    #endregion
    #region CultistSpawnConfig
    #region CultistCustoms
    private int _cultist_Customs_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.bigmap);
            Data.bossConfig.sectantPriest.spawnChance.bigmap = value;
        }
    }
    private void undo_Cultist_Customs_SpawnChance() => _cultist_Customs_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.bigmap;
    private void default_Cultist_Customs_SpawnChance() => _cultist_Customs_SpawnChance = 15;
    private List<string> _cultist_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.bigmap);
            }
        }
    }
    private void On_Cultist_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Customs_SpawnZones() => _cultist_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.bigmap };
    private void default_Cultist_Customs_SpawnZones() => _cultist_Customs_SpawnZones = new List<string> { "ZoneScavBase" };
    #endregion
    #region CultistFactory
    private int _cultist_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.factory4_day);
            Data.bossConfig.sectantPriest.spawnChance.factory4_day = value;
        }
    }
    private void undo_Cultist_FactoryDay_SpawnChance() => _cultist_FactoryDay_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.factory4_day;
    private void default_Cultist_FactoryDay_SpawnChance() => _cultist_FactoryDay_SpawnChance = 0;
    private List<string> _cultist_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.sectantPriest.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.factory4_day);
            }
        }
    }
    private void On_Cultist_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_FactoryDay_SpawnZones() => _cultist_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.factory4_day };
    private void default_Cultist_FactoryDay_SpawnZones() => _cultist_FactoryDay_SpawnZones = new List<string>();
    private int _cultist_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.factory4_night);
            Data.bossConfig.sectantPriest.spawnChance.factory4_night = value;
        }
    }
    private void undo_Cultist_FactoryNight_SpawnChance() => _cultist_FactoryNight_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.factory4_night;
    private void default_Cultist_FactoryNight_SpawnChance() => _cultist_FactoryNight_SpawnChance = 20;
    private List<string> _cultist_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.sectantPriest.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.factory4_night);
            }
        }
    }
    private void On_Cultist_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_FactoryNight_SpawnZones() => _cultist_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.factory4_night };
    private void default_Cultist_FactoryNight_SpawnZones() => _cultist_FactoryNight_SpawnZones = new List<string> { "BotZone" };
    #endregion
    #region CultistInterchange
    private int _cultist_Interchange_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.interchange);
            Data.bossConfig.sectantPriest.spawnChance.interchange = value;
        }
    }
    private void undo_Cultist_Interchange_SpawnChance() => _cultist_Interchange_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.interchange;
    private void default_Cultist_Interchange_SpawnChance() => _cultist_Interchange_SpawnChance = 0;
    private List<string> _cultist_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.interchange);
            }
        }
    }
    private void On_Cultist_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Interchange_SpawnZones() => _cultist_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.interchange };
    private void default_Cultist_Interchange_SpawnZones() => _cultist_Interchange_SpawnZones = new List<string>();
    #endregion
    #region CultistLabs
    private int _cultist_Labs_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.laboratory);
            Data.bossConfig.sectantPriest.spawnChance.laboratory = value;
        }
    }
    private void undo_Cultist_Labs_SpawnChance() => _cultist_Labs_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.laboratory;
    private void default_Cultist_Labs_SpawnChance() => _cultist_Labs_SpawnChance = 0;
    private List<string> _cultist_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.laboratory);
            }
        }
    }
    private void On_Cultist_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Labs_SpawnZones() => _cultist_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.laboratory };
    private void default_Cultist_Labs_SpawnZones() => _cultist_Labs_SpawnZones = new List<string>();
    #endregion
    #region CultistLighthouse
    private int _cultist_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.lighthouse);
            Data.bossConfig.sectantPriest.spawnChance.lighthouse = value;
        }
    }
    private void undo_Cultist_Lighthouse_SpawnChance() => _cultist_Lighthouse_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.lighthouse;
    private void default_Cultist_Lighthouse_SpawnChance() => _cultist_Lighthouse_SpawnChance = 0;
    private List<string> _cultist_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.lighthouse);
            }
        }
    }
    private void On_Cultist_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Lighthouse_SpawnZones() => _cultist_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.lighthouse };
    private void default_Cultist_Lighthouse_SpawnZones() => _cultist_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region CultistReserve
    private int _cultist_Reserve_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.rezervbase);
            Data.bossConfig.sectantPriest.spawnChance.rezervbase = value;
        }
    }
    private void undo_Cultist_Reserve_SpawnChance() => _cultist_Reserve_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.rezervbase;
    private void default_Cultist_Reserve_SpawnChance() => _cultist_Reserve_SpawnChance = 0;
    private List<string> _cultist_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.rezervbase);
            }
        }
    }
    private void On_Cultist_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Reserve_SpawnZones() => _cultist_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.rezervbase };
    private void default_Cultist_Reserve_SpawnZones() => _cultist_Reserve_SpawnZones = new List<string>();
    #endregion
    #region CultistGroundZero
    private int _cultist_GroundZero_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.sandbox);
            Data.bossConfig.sectantPriest.spawnChance.sandbox = value;
        }
    }
    private void undo_Cultist_GroundZero_SpawnChance() => _cultist_GroundZero_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.sandbox;
    private void default_Cultist_GroundZero_SpawnChance() => _cultist_GroundZero_SpawnChance = 0;
    private List<string> _cultist_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.sandbox);
            }
        }
    }
    private void On_Cultist_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_GroundZero_SpawnZones() => _cultist_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.sandbox };
    private void default_Cultist_GroundZero_SpawnZones() => _cultist_GroundZero_SpawnZones = new List<string>();
    private int _cultist_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.sandbox_high);
            Data.bossConfig.sectantPriest.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Cultist_GroundZeroHigh_SpawnChance() => _cultist_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.sandbox_high;
    private void default_Cultist_GroundZeroHigh_SpawnChance() => _cultist_GroundZeroHigh_SpawnChance = 44;
    private List<string> _cultist_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.sandbox_high);
            }
        }
    }
    private void On_Cultist_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_GroundZeroHigh_SpawnZones() => _cultist_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.sandbox_high };
    private void default_Cultist_GroundZeroHigh_SpawnZones() => _cultist_GroundZeroHigh_SpawnZones = new List<string> { "ZoneSandbox" };
    #endregion
    #region CultistShoreline
    private int _cultist_Shoreline_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.shoreline);
            Data.bossConfig.sectantPriest.spawnChance.shoreline = value;
        }
    }
    private void undo_Cultist_Shoreline_SpawnChance() => _cultist_Shoreline_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.shoreline;
    private void default_Cultist_Shoreline_SpawnChance() => _cultist_Shoreline_SpawnChance = 15;
    private List<string> _cultist_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.shoreline);
            }
        }
    }
    private void On_Cultist_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Shoreline_SpawnZones() => _cultist_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.shoreline };
    private void default_Cultist_Shoreline_SpawnZones() => _cultist_Shoreline_SpawnZones = new List<string> { "ZoneSanatorium1,ZoneSanatorium2,ZoneForestSpawn" };
    #endregion
    #region CultistStreets
    private int _cultist_Streets_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.tarkovstreets);
            Data.bossConfig.sectantPriest.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Cultist_Streets_SpawnChance() => _cultist_Streets_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.tarkovstreets;
    private void default_Cultist_Streets_SpawnChance() => _cultist_Streets_SpawnChance = 0;
    private List<string> _cultist_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Cultist_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Streets_SpawnZones() => _cultist_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.tarkovstreets };
    private void default_Cultist_Streets_SpawnZones() => _cultist_Streets_SpawnZones = new List<string>();
    #endregion
    #region CultistWoods
    private int _cultist_Woods_SpawnChance
    {
        get => Data.bossConfig.sectantPriest.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.sectantPriest.spawnChance.woods);
            Data.bossConfig.sectantPriest.spawnChance.woods = value;
        }
    }
    private void undo_Cultist_Woods_SpawnChance() => _cultist_Woods_SpawnChance = OriginalConfig.bossConfig.sectantPriest.spawnChance.woods;
    private void default_Cultist_Woods_SpawnChance() => _cultist_Woods_SpawnChance = 15;
    private List<string> _cultist_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.sectantPriest.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.sectantPriest.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.sectantPriest.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.sectantPriest.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.sectantPriest.bossZone.woods);
            }
        }
    }
    private void On_Cultist_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _cultist_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Cultist_Woods_SpawnZones() => _cultist_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.sectantPriest.bossZone.woods };
    private void default_Cultist_Woods_SpawnZones() => _cultist_Woods_SpawnZones = new List<string> { "ZoneMiniHouse,ZoneBrokenVill" };
    #endregion
    #endregion

    #region SmugglersGlobalConfig
    private bool _smugglers_Enabled
    {
        get => Data.bossConfig.arenaFighterEvent.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.enable);
            Data.bossConfig.arenaFighterEvent.enable = value;
        }
    }
    private void undo_Smugglers_Enable() => _smugglers_Enabled = OriginalConfig.bossConfig.arenaFighterEvent.enable;
    private void default_Smugglers_Enable() => _smugglers_Enabled = true;
    private int _smugglers_Time
    {
        get => Data.bossConfig.arenaFighterEvent.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.time);
            Data.bossConfig.arenaFighterEvent.time = value;
        }
    }
    private void undo_Smugglers_Time() => _smugglers_Time = OriginalConfig.bossConfig.arenaFighterEvent.time;
    private void default_Smugglers_Time() => _smugglers_Time = -1;
    #endregion
    #region SmugglersSpawnConfig
    #region SmugglersCustoms
    private int _smugglers_Customs_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.bigmap);
            Data.bossConfig.arenaFighterEvent.spawnChance.bigmap = value;
        }
    }
    private void undo_Smugglers_Customs_SpawnChance() => _smugglers_Customs_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.bigmap;
    private void default_Smugglers_Customs_SpawnChance() => _smugglers_Customs_SpawnChance = 5;
    private List<string> _smugglers_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.bigmap);
            }
        }
    }
    private void On_Smugglers_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Customs_SpawnZones() => _smugglers_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.bigmap };
    private void default_Smugglers_Customs_SpawnZones() => _smugglers_Customs_SpawnZones = new List<string> { "ZoneFactoryCenter,ZoneScavBase" };
    #endregion
    #region SmugglersFactory
    private int _smugglers_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.factory4_day);
            Data.bossConfig.arenaFighterEvent.spawnChance.factory4_day = value;
        }
    }
    private void undo_Smugglers_FactoryDay_SpawnChance() => _smugglers_FactoryDay_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.factory4_day;
    private void default_Smugglers_FactoryDay_SpawnChance() => _smugglers_FactoryDay_SpawnChance = 0;
    private List<string> _smugglers_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.factory4_day);
            }
        }
    }
    private void On_Smugglers_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_FactoryDay_SpawnZones() => _smugglers_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.factory4_day };
    private void default_Smugglers_FactoryDay_SpawnZones() => _smugglers_FactoryDay_SpawnZones = new List<string>();
    private int _smugglers_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.factory4_night);
            Data.bossConfig.arenaFighterEvent.spawnChance.factory4_night = value;
        }
    }
    private void undo_Smugglers_FactoryNight_SpawnChance() => _smugglers_FactoryNight_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.factory4_night;
    private void default_Smugglers_FactoryNight_SpawnChance() => _smugglers_FactoryNight_SpawnChance = 0;
    private List<string> _smugglers_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.factory4_night);
            }
        }
    }
    private void On_Smugglers_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_FactoryNight_SpawnZones() => _smugglers_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.factory4_night };
    private void default_Smugglers_FactoryNight_SpawnZones() => _smugglers_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region SmugglersInterchange
    private int _smugglers_Interchange_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.interchange);
            Data.bossConfig.arenaFighterEvent.spawnChance.interchange = value;
        }
    }
    private void undo_Smugglers_Interchange_SpawnChance() => _smugglers_Interchange_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.interchange;
    private void default_Smugglers_Interchange_SpawnChance() => _smugglers_Interchange_SpawnChance = 0;
    private List<string> _smugglers_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.interchange);
            }
        }
    }
    private void On_Smugglers_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Interchange_SpawnZones() => _smugglers_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.interchange };
    private void default_Smugglers_Interchange_SpawnZones() => _smugglers_Interchange_SpawnZones = new List<string>();
    #endregion
    #region SmugglersLabs
    private int _smugglers_Labs_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.laboratory);
            Data.bossConfig.arenaFighterEvent.spawnChance.laboratory = value;
        }
    }
    private void undo_Smugglers_Labs_SpawnChance() => _smugglers_Labs_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.laboratory;
    private void default_Smugglers_Labs_SpawnChance() => _smugglers_Labs_SpawnChance = 0;
    private List<string> _smugglers_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.laboratory);
            }
        }
    }
    private void On_Smugglers_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Labs_SpawnZones() => _smugglers_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.laboratory };
    private void default_Smugglers_Labs_SpawnZones() => _smugglers_Labs_SpawnZones = new List<string>();
    #endregion
    #region SmugglersLighthouse
    private int _smugglers_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.lighthouse);
            Data.bossConfig.arenaFighterEvent.spawnChance.lighthouse = value;
        }
    }
    private void undo_Smugglers_Lighthouse_SpawnChance() => _smugglers_Lighthouse_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.lighthouse;
    private void default_Smugglers_Lighthouse_SpawnChance() => _smugglers_Lighthouse_SpawnChance = 0;
    private List<string> _smugglers_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.lighthouse);
            }
        }
    }
    private void On_Smugglers_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Lighthouse_SpawnZones() => _smugglers_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.lighthouse };
    private void default_Smugglers_Lighthouse_SpawnZones() => _smugglers_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region SmugglersReserve
    private int _smugglers_Reserve_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.rezervbase);
            Data.bossConfig.arenaFighterEvent.spawnChance.rezervbase = value;
        }
    }
    private void undo_Smugglers_Reserve_SpawnChance() => _smugglers_Reserve_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.rezervbase;
    private void default_Smugglers_Reserve_SpawnChance() => _smugglers_Reserve_SpawnChance = 0;
    private List<string> _smugglers_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.rezervbase);
            }
        }
    }
    private void On_Smugglers_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Reserve_SpawnZones() => _smugglers_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.rezervbase };
    private void default_Smugglers_Reserve_SpawnZones() => _smugglers_Reserve_SpawnZones = new List<string>();
    #endregion
    #region SmugglersGroundZero
    private int _smugglers_GroundZero_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.sandbox);
            Data.bossConfig.arenaFighterEvent.spawnChance.sandbox = value;
        }
    }
    private void undo_Smugglers_GroundZero_SpawnChance() => _smugglers_GroundZero_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.sandbox;
    private void default_Smugglers_GroundZero_SpawnChance() => _smugglers_GroundZero_SpawnChance = 0;
    private List<string> _smugglers_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.sandbox);
            }
        }
    }
    private void On_Smugglers_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_GroundZero_SpawnZones() => _smugglers_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.sandbox };
    private void default_Smugglers_GroundZero_SpawnZones() => _smugglers_GroundZero_SpawnZones = new List<string>();
    private int _smugglers_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.sandbox_high);
            Data.bossConfig.arenaFighterEvent.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Smugglers_GroundZeroHigh_SpawnChance() => _smugglers_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.sandbox_high;
    private void default_Smugglers_GroundZeroHigh_SpawnChance() => _smugglers_GroundZeroHigh_SpawnChance = 0;
    private List<string> _smugglers_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.sandbox_high);
            }
        }
    }
    private void On_Smugglers_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_GroundZeroHigh_SpawnZones() => _smugglers_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.sandbox_high };
    private void default_Smugglers_GroundZeroHigh_SpawnZones() => _smugglers_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region SmugglersShoreline
    private int _smugglers_Shoreline_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.shoreline);
            Data.bossConfig.arenaFighterEvent.spawnChance.shoreline = value;
        }
    }
    private void undo_Smugglers_Shoreline_SpawnChance() => _smugglers_Shoreline_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.shoreline;
    private void default_Smugglers_Shoreline_SpawnChance() => _smugglers_Shoreline_SpawnChance = 0;
    private List<string> _smugglers_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.shoreline);
            }
        }
    }
    private void On_Smugglers_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Shoreline_SpawnZones() => _smugglers_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.shoreline };
    private void default_Smugglers_Shoreline_SpawnZones() => _smugglers_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region SmugglersStreets
    private int _smugglers_Streets_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.tarkovstreets);
            Data.bossConfig.arenaFighterEvent.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Smugglers_Streets_SpawnChance() => _smugglers_Streets_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.tarkovstreets;
    private void default_Smugglers_Streets_SpawnChance() => _smugglers_Streets_SpawnChance = 0;
    private List<string> _smugglers_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Smugglers_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Streets_SpawnZones() => _smugglers_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.tarkovstreets };
    private void default_Smugglers_Streets_SpawnZones() => _smugglers_Streets_SpawnZones = new List<string>();
    #endregion
    #region SmugglersWoods
    private int _smugglers_Woods_SpawnChance
    {
        get => Data.bossConfig.arenaFighterEvent.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.woods);
            Data.bossConfig.arenaFighterEvent.spawnChance.woods = value;
        }
    }
    private void undo_Smugglers_Woods_SpawnChance() => _smugglers_Woods_SpawnChance = OriginalConfig.bossConfig.arenaFighterEvent.spawnChance.woods;
    private void default_Smugglers_Woods_SpawnChance() => _smugglers_Woods_SpawnChance = 5;
    private List<string> _smugglers_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.arenaFighterEvent.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.arenaFighterEvent.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.arenaFighterEvent.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.arenaFighterEvent.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.arenaFighterEvent.bossZone.woods);
            }
        }
    }
    private void On_Smugglers_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _smugglers_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Smugglers_Woods_SpawnZones() => _smugglers_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.arenaFighterEvent.bossZone.woods };
    private void default_Smugglers_Woods_SpawnZones() => _smugglers_Woods_SpawnZones = new List<string> { "ZoneMiniHouse,ZoneClearVill,ZoneRoad,ZoneBrokenVill,ZoneScavBase2" };
    #endregion
    #endregion

    #region RaidersGlobalConfig
    private bool _raiders_Enabled
    {
        get => Data.bossConfig.pmcBot.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.enable);
            Data.bossConfig.pmcBot.enable = value;
        }
    }
    private void undo_Raiders_Enable() => _raiders_Enabled = OriginalConfig.bossConfig.pmcBot.enable;
    private void default_Raiders_Enable() => _raiders_Enabled = true;
    private bool _raiders_AddExtraSpawns
    {
        get => Data.bossConfig.pmcBot.addExtraSpawns;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.addExtraSpawns);
            Data.bossConfig.pmcBot.addExtraSpawns = value;
        }
    }
    private void undo_Raiders_AddExtraSpawns() => _raiders_AddExtraSpawns = OriginalConfig.bossConfig.pmcBot.addExtraSpawns;
    private void default_Raiders_AddExtraSpawns() => _raiders_AddExtraSpawns = false;
    private bool _raiders_DisableVanillaSpawns
    {
        get => Data.bossConfig.pmcBot.disableVanillaSpawns;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.disableVanillaSpawns);
            Data.bossConfig.pmcBot.disableVanillaSpawns = value;
        }
    }
    private void undo_Raiders_DisableVanillaSpawns() => _raiders_DisableVanillaSpawns = OriginalConfig.bossConfig.pmcBot.disableVanillaSpawns;
    private void default_Raiders_DisableVanillaSpawns() => _raiders_DisableVanillaSpawns = false;
    private int _raiders_Time
    {
        get => Data.bossConfig.pmcBot.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.time);
            Data.bossConfig.pmcBot.time = value;
        }
    }
    private void undo_Raiders_Time() => _raiders_Time = OriginalConfig.bossConfig.pmcBot.time;
    private void default_Raiders_Time() => _raiders_Time = -1;
    #endregion
    #region RaidersSpawnConfig
    #region RaidersCustoms
    private int _raiders_Customs_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.bigmap);
            Data.bossConfig.pmcBot.spawnChance.bigmap = value;
        }
    }
    private void undo_Raiders_Customs_SpawnChance() => _raiders_Customs_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.bigmap;
    private void default_Raiders_Customs_SpawnChance() => _raiders_Customs_SpawnChance = 0;
    private List<string> _raiders_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.bigmap);
            }
        }
    }
    private void On_Raiders_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Customs_SpawnZones() => _raiders_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.bigmap };
    private void default_Raiders_Customs_SpawnZones() => _raiders_Customs_SpawnZones = new List<string>();
    #endregion
    #region RaidersFactory
    private int _raiders_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.factory4_day);
            Data.bossConfig.pmcBot.spawnChance.factory4_day = value;
        }
    }
    private void undo_Raiders_FactoryDay_SpawnChance() => _raiders_FactoryDay_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.factory4_day;
    private void default_Raiders_FactoryDay_SpawnChance() => _raiders_FactoryDay_SpawnChance = 0;
    private List<string> _raiders_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.pmcBot.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.factory4_day);
            }
        }
    }
    private void On_Raiders_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_FactoryDay_SpawnZones() => _raiders_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.factory4_day };
    private void default_Raiders_FactoryDay_SpawnZones() => _raiders_FactoryDay_SpawnZones = new List<string>();
    private int _raiders_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.factory4_night);
            Data.bossConfig.pmcBot.spawnChance.factory4_night = value;
        }
    }
    private void undo_Raiders_FactoryNight_SpawnChance() => _raiders_FactoryNight_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.factory4_night;
    private void default_Raiders_FactoryNight_SpawnChance() => _raiders_FactoryNight_SpawnChance = 0;
    private List<string> _raiders_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.pmcBot.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.factory4_night);
            }
        }
    }
    private void On_Raiders_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_FactoryNight_SpawnZones() => _raiders_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.factory4_night };
    private void default_Raiders_FactoryNight_SpawnZones() => _raiders_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region RaidersInterchange
    private int _raiders_Interchange_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.interchange);
            Data.bossConfig.pmcBot.spawnChance.interchange = value;
        }
    }
    private void undo_Raiders_Interchange_SpawnChance() => _raiders_Interchange_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.interchange;
    private void default_Raiders_Interchange_SpawnChance() => _raiders_Interchange_SpawnChance = 0;
    private List<string> _raiders_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.interchange);
            }
        }
    }
    private void On_Raiders_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Interchange_SpawnZones() => _raiders_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.interchange };
    private void default_Raiders_Interchange_SpawnZones() => _raiders_Interchange_SpawnZones = new List<string>();
    #endregion
    #region RaidersLabs
    private int _raiders_Labs_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.laboratory);
            Data.bossConfig.pmcBot.spawnChance.laboratory = value;
        }
    }
    private void undo_Raiders_Labs_SpawnChance() => _raiders_Labs_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.laboratory;
    private void default_Raiders_Labs_SpawnChance() => _raiders_Labs_SpawnChance = 0;
    private List<string> _raiders_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.laboratory);
            }
        }
    }
    private void On_Raiders_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Labs_SpawnZones() => _raiders_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.laboratory };
    private void default_Raiders_Labs_SpawnZones() => _raiders_Labs_SpawnZones = new List<string>();
    #endregion
    #region RaidersLighthouse
    private int _raiders_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.lighthouse);
            Data.bossConfig.pmcBot.spawnChance.lighthouse = value;
        }
    }
    private void undo_Raiders_Lighthouse_SpawnChance() => _raiders_Lighthouse_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.lighthouse;
    private void default_Raiders_Lighthouse_SpawnChance() => _raiders_Lighthouse_SpawnChance = 0;
    private List<string> _raiders_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.lighthouse);
            }
        }
    }
    private void On_Raiders_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Lighthouse_SpawnZones() => _raiders_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.lighthouse };
    private void default_Raiders_Lighthouse_SpawnZones() => _raiders_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region RaidersReserve
    private int _raiders_Reserve_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.rezervbase);
            Data.bossConfig.pmcBot.spawnChance.rezervbase = value;
        }
    }
    private void undo_Raiders_Reserve_SpawnChance() => _raiders_Reserve_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.rezervbase;
    private void default_Raiders_Reserve_SpawnChance() => _raiders_Reserve_SpawnChance = 0;
    private List<string> _raiders_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.rezervbase);
            }
        }
    }
    private void On_Raiders_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Reserve_SpawnZones() => _raiders_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.rezervbase };
    private void default_Raiders_Reserve_SpawnZones() => _raiders_Reserve_SpawnZones = new List<string>();
    #endregion
    #region RaidersGroundZero
    private int _raiders_GroundZero_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.sandbox);
            Data.bossConfig.pmcBot.spawnChance.sandbox = value;
        }
    }
    private void undo_Raiders_GroundZero_SpawnChance() => _raiders_GroundZero_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.sandbox;
    private void default_Raiders_GroundZero_SpawnChance() => _raiders_GroundZero_SpawnChance = 0;
    private List<string> _raiders_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.sandbox);
            }
        }
    }
    private void On_Raiders_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_GroundZero_SpawnZones() => _raiders_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.sandbox };
    private void default_Raiders_GroundZero_SpawnZones() => _raiders_GroundZero_SpawnZones = new List<string>();
    private int _raiders_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.sandbox_high);
            Data.bossConfig.pmcBot.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Raiders_GroundZeroHigh_SpawnChance() => _raiders_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.sandbox_high;
    private void default_Raiders_GroundZeroHigh_SpawnChance() => _raiders_GroundZeroHigh_SpawnChance = 0;
    private List<string> _raiders_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.sandbox_high);
            }
        }
    }
    private void On_Raiders_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_GroundZeroHigh_SpawnZones() => _raiders_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.sandbox_high };
    private void default_Raiders_GroundZeroHigh_SpawnZones() => _raiders_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region RaidersShoreline
    private int _raiders_Shoreline_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.shoreline);
            Data.bossConfig.pmcBot.spawnChance.shoreline = value;
        }
    }
    private void undo_Raiders_Shoreline_SpawnChance() => _raiders_Shoreline_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.shoreline;
    private void default_Raiders_Shoreline_SpawnChance() => _raiders_Shoreline_SpawnChance = 0;
    private List<string> _raiders_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.shoreline);
            }
        }
    }
    private void On_Raiders_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Shoreline_SpawnZones() => _raiders_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.shoreline };
    private void default_Raiders_Shoreline_SpawnZones() => _raiders_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region RaidersStreets
    private int _raiders_Streets_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.tarkovstreets);
            Data.bossConfig.pmcBot.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Raiders_Streets_SpawnChance() => _raiders_Streets_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.tarkovstreets;
    private void default_Raiders_Streets_SpawnChance() => _raiders_Streets_SpawnChance = 0;
    private List<string> _raiders_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Raiders_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Streets_SpawnZones() => _raiders_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.tarkovstreets };
    private void default_Raiders_Streets_SpawnZones() => _raiders_Streets_SpawnZones = new List<string>();
    #endregion
    #region RaidersWoods
    private int _raiders_Woods_SpawnChance
    {
        get => Data.bossConfig.pmcBot.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.pmcBot.spawnChance.woods);
            Data.bossConfig.pmcBot.spawnChance.woods = value;
        }
    }
    private void undo_Raiders_Woods_SpawnChance() => _raiders_Woods_SpawnChance = OriginalConfig.bossConfig.pmcBot.spawnChance.woods;
    private void default_Raiders_Woods_SpawnChance() => _raiders_Woods_SpawnChance = 0;
    private List<string> _raiders_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.pmcBot.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.pmcBot.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.pmcBot.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.pmcBot.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.pmcBot.bossZone.woods);
            }
        }
    }
    private void On_Raiders_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _raiders_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Raiders_Woods_SpawnZones() => _raiders_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.pmcBot.bossZone.woods };
    private void default_Raiders_Woods_SpawnZones() => _raiders_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region RoguesGlobalConfig
    private bool _rogues_Enabled
    {
        get => Data.bossConfig.exUsec.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.enable);
            Data.bossConfig.exUsec.enable = value;
        }
    }
    private void undo_Rogues_Enable() => _rogues_Enabled = OriginalConfig.bossConfig.exUsec.enable;
    private void default_Rogues_Enable() => _rogues_Enabled = true;
    private bool _rogues_AddExtraSpawns
    {
        get => Data.bossConfig.exUsec.addExtraSpawns;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.addExtraSpawns);
            Data.bossConfig.exUsec.addExtraSpawns = value;
        }
    }
    private void undo_Rogues_AddExtraSpawns() => _rogues_AddExtraSpawns = OriginalConfig.bossConfig.exUsec.addExtraSpawns;
    private void default_Rogues_AddExtraSpawns() => _rogues_AddExtraSpawns = false;
    private bool _rogues_DisableVanillaSpawns
    {
        get => Data.bossConfig.exUsec.disableVanillaSpawns;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.disableVanillaSpawns);
            Data.bossConfig.exUsec.disableVanillaSpawns = value;
        }
    }
    private void undo_Rogues_DisableVanillaSpawns() => _rogues_DisableVanillaSpawns = OriginalConfig.bossConfig.exUsec.disableVanillaSpawns;
    private void default_Rogues_DisableVanillaSpawns() => _rogues_DisableVanillaSpawns = false;
    private int _rogues_Time
    {
        get => Data.bossConfig.exUsec.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.time);
            Data.bossConfig.exUsec.time = value;
        }
    }
    private void undo_Rogues_Time() => _rogues_Time = OriginalConfig.bossConfig.exUsec.time;
    private void default_Rogues_Time() => _rogues_Time = -1;
    #endregion
    #region RoguesSpawnConfig
    #region RoguesCustoms
    private int _rogues_Customs_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.bigmap);
            Data.bossConfig.exUsec.spawnChance.bigmap = value;
        }
    }
    private void undo_Rogues_Customs_SpawnChance() => _rogues_Customs_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.bigmap;
    private void default_Rogues_Customs_SpawnChance() => _rogues_Customs_SpawnChance = 0;
    private List<string> _rogues_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.bigmap);
            }
        }
    }
    private void On_Rogues_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Customs_SpawnZones() => _rogues_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.bigmap };
    private void default_Rogues_Customs_SpawnZones() => _rogues_Customs_SpawnZones = new List<string>();
    #endregion
    #region RoguesFactory
    private int _rogues_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.factory4_day);
            Data.bossConfig.exUsec.spawnChance.factory4_day = value;
        }
    }
    private void undo_Rogues_FactoryDay_SpawnChance() => _rogues_FactoryDay_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.factory4_day;
    private void default_Rogues_FactoryDay_SpawnChance() => _rogues_FactoryDay_SpawnChance = 0;
    private List<string> _rogues_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.exUsec.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.factory4_day);
            }
        }
    }
    private void On_Rogues_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_FactoryDay_SpawnZones() => _rogues_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.factory4_day };
    private void default_Rogues_FactoryDay_SpawnZones() => _rogues_FactoryDay_SpawnZones = new List<string>();
    private int _rogues_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.factory4_night);
            Data.bossConfig.exUsec.spawnChance.factory4_night = value;
        }
    }
    private void undo_Rogues_FactoryNight_SpawnChance() => _rogues_FactoryNight_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.factory4_night;
    private void default_Rogues_FactoryNight_SpawnChance() => _rogues_FactoryNight_SpawnChance = 0;
    private List<string> _rogues_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.exUsec.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.factory4_night);
            }
        }
    }
    private void On_Rogues_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_FactoryNight_SpawnZones() => _rogues_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.factory4_night };
    private void default_Rogues_FactoryNight_SpawnZones() => _rogues_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region RoguesInterchange
    private int _rogues_Interchange_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.interchange);
            Data.bossConfig.exUsec.spawnChance.interchange = value;
        }
    }
    private void undo_Rogues_Interchange_SpawnChance() => _rogues_Interchange_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.interchange;
    private void default_Rogues_Interchange_SpawnChance() => _rogues_Interchange_SpawnChance = 0;
    private List<string> _rogues_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.interchange);
            }
        }
    }
    private void On_Rogues_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Interchange_SpawnZones() => _rogues_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.interchange };
    private void default_Rogues_Interchange_SpawnZones() => _rogues_Interchange_SpawnZones = new List<string>();
    #endregion
    #region RoguesLabs
    private int _rogues_Labs_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.laboratory);
            Data.bossConfig.exUsec.spawnChance.laboratory = value;
        }
    }
    private void undo_Rogues_Labs_SpawnChance() => _rogues_Labs_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.laboratory;
    private void default_Rogues_Labs_SpawnChance() => _rogues_Labs_SpawnChance = 0;
    private List<string> _rogues_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.laboratory);
            }
        }
    }
    private void On_Rogues_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Labs_SpawnZones() => _rogues_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.laboratory };
    private void default_Rogues_Labs_SpawnZones() => _rogues_Labs_SpawnZones = new List<string>();
    #endregion
    #region RoguesLighthouse
    private int _rogues_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.lighthouse);
            Data.bossConfig.exUsec.spawnChance.lighthouse = value;
        }
    }
    private void undo_Rogues_Lighthouse_SpawnChance() => _rogues_Lighthouse_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.lighthouse;
    private void default_Rogues_Lighthouse_SpawnChance() => _rogues_Lighthouse_SpawnChance = 0;
    private List<string> _rogues_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.lighthouse);
            }
        }
    }
    private void On_Rogues_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Lighthouse_SpawnZones() => _rogues_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.lighthouse };
    private void default_Rogues_Lighthouse_SpawnZones() => _rogues_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region RoguesReserve
    private int _rogues_Reserve_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.rezervbase);
            Data.bossConfig.exUsec.spawnChance.rezervbase = value;
        }
    }
    private void undo_Rogues_Reserve_SpawnChance() => _rogues_Reserve_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.rezervbase;
    private void default_Rogues_Reserve_SpawnChance() => _rogues_Reserve_SpawnChance = 0;
    private List<string> _rogues_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.rezervbase);
            }
        }
    }
    private void On_Rogues_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Reserve_SpawnZones() => _rogues_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.rezervbase };
    private void default_Rogues_Reserve_SpawnZones() => _rogues_Reserve_SpawnZones = new List<string>();
    #endregion
    #region RoguesGroundZero
    private int _rogues_GroundZero_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.sandbox);
            Data.bossConfig.exUsec.spawnChance.sandbox = value;
        }
    }
    private void undo_Rogues_GroundZero_SpawnChance() => _rogues_GroundZero_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.sandbox;
    private void default_Rogues_GroundZero_SpawnChance() => _rogues_GroundZero_SpawnChance = 0;
    private List<string> _rogues_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.sandbox);
            }
        }
    }
    private void On_Rogues_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_GroundZero_SpawnZones() => _rogues_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.sandbox };
    private void default_Rogues_GroundZero_SpawnZones() => _rogues_GroundZero_SpawnZones = new List<string>();
    private int _rogues_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.sandbox_high);
            Data.bossConfig.exUsec.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Rogues_GroundZeroHigh_SpawnChance() => _rogues_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.sandbox_high;
    private void default_Rogues_GroundZeroHigh_SpawnChance() => _rogues_GroundZeroHigh_SpawnChance = 0;
    private List<string> _rogues_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.sandbox_high);
            }
        }
    }
    private void On_Rogues_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_GroundZeroHigh_SpawnZones() => _rogues_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.sandbox_high };
    private void default_Rogues_GroundZeroHigh_SpawnZones() => _rogues_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region RoguesShoreline
    private int _rogues_Shoreline_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.shoreline);
            Data.bossConfig.exUsec.spawnChance.shoreline = value;
        }
    }
    private void undo_Rogues_Shoreline_SpawnChance() => _rogues_Shoreline_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.shoreline;
    private void default_Rogues_Shoreline_SpawnChance() => _rogues_Shoreline_SpawnChance = 0;
    private List<string> _rogues_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.shoreline);
            }
        }
    }
    private void On_Rogues_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Shoreline_SpawnZones() => _rogues_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.shoreline };
    private void default_Rogues_Shoreline_SpawnZones() => _rogues_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region RoguesStreets
    private int _rogues_Streets_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.tarkovstreets);
            Data.bossConfig.exUsec.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Rogues_Streets_SpawnChance() => _rogues_Streets_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.tarkovstreets;
    private void default_Rogues_Streets_SpawnChance() => _rogues_Streets_SpawnChance = 0;
    private List<string> _rogues_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Rogues_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Streets_SpawnZones() => _rogues_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.tarkovstreets };
    private void default_Rogues_Streets_SpawnZones() => _rogues_Streets_SpawnZones = new List<string>();
    #endregion
    #region RoguesWoods
    private int _rogues_Woods_SpawnChance
    {
        get => Data.bossConfig.exUsec.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.exUsec.spawnChance.woods);
            Data.bossConfig.exUsec.spawnChance.woods = value;
        }
    }
    private void undo_Rogues_Woods_SpawnChance() => _rogues_Woods_SpawnChance = OriginalConfig.bossConfig.exUsec.spawnChance.woods;
    private void default_Rogues_Woods_SpawnChance() => _rogues_Woods_SpawnChance = 0;
    private List<string> _rogues_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.exUsec.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.exUsec.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.exUsec.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.exUsec.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.exUsec.bossZone.woods);
            }
        }
    }
    private void On_Rogues_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _rogues_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Rogues_Woods_SpawnZones() => _rogues_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.exUsec.bossZone.woods };
    private void default_Rogues_Woods_SpawnZones() => _rogues_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region SantaGlobalConfig
    private bool _santa_Enabled
    {
        get => Data.bossConfig.gifter.enable;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.enable);
            Data.bossConfig.gifter.enable = value;
        }
    }
    private void undo_Santa_Enable() => _santa_Enabled = OriginalConfig.bossConfig.gifter.enable;
    private void default_Santa_Enable() => _santa_Enabled = true;
    private int _santa_Time
    {
        get => Data.bossConfig.gifter.time;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.time);
            Data.bossConfig.gifter.time = value;
        }
    }
    private void undo_Santa_Time() => _santa_Time = OriginalConfig.bossConfig.gifter.time;
    private void default_Santa_Time() => _santa_Time = -1;
    #endregion
    #region SantaSpawnConfig
    #region SantaCustoms
    private int _santa_Customs_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.bigmap;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.bigmap);
            Data.bossConfig.gifter.spawnChance.bigmap = value;
        }
    }
    private void undo_Santa_Customs_SpawnChance() => _santa_Customs_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.bigmap;
    private void default_Santa_Customs_SpawnChance() => _santa_Customs_SpawnChance = 0;
    private List<string> _santa_Customs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.bigmap.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.bigmap = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.bigmap);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.bigmap = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.bigmap);
            }
        }
    }
    private void On_Santa_Customs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Customs_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Customs_SpawnZones() => _santa_Customs_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.bigmap };
    private void default_Santa_Customs_SpawnZones() => _santa_Customs_SpawnZones = new List<string>();
    #endregion
    #region SantaFactory
    private int _santa_FactoryDay_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.factory4_day;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.factory4_day);
            Data.bossConfig.gifter.spawnChance.factory4_day = value;
        }
    }
    private void undo_Santa_FactoryDay_SpawnChance() => _santa_FactoryDay_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.factory4_day;
    private void default_Santa_FactoryDay_SpawnChance() => _santa_FactoryDay_SpawnChance = 0;
    private List<string> _santa_FactoryDay_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.factory4_day.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.factory4_day = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.gifter.bossZone.factory4_day);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.factory4_day = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.factory4_day);
            }
        }
    }
    private void On_Santa_FactoryDay_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_FactoryDay_SpawnZones = selected.ToList();
    }
    private void undo_Santa_FactoryDay_SpawnZones() => _santa_FactoryDay_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.factory4_day };
    private void default_Santa_FactoryDay_SpawnZones() => _santa_FactoryDay_SpawnZones = new List<string>();
    private int _santa_FactoryNight_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.factory4_night;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.factory4_night);
            Data.bossConfig.gifter.spawnChance.factory4_night = value;
        }
    }
    private void undo_Santa_FactoryNight_SpawnChance() => _santa_FactoryNight_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.factory4_night;
    private void default_Santa_FactoryNight_SpawnChance() => _santa_FactoryNight_SpawnChance = 0;
    private List<string> _santa_FactoryNight_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.factory4_night.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.factory4_night = string.Empty;
                Utils.UpdateView(string.Empty, OriginalConfig.bossConfig.gifter.bossZone.factory4_night);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.factory4_night = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.factory4_night);
            }
        }
    }
    private void On_Santa_FactoryNight_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_FactoryNight_SpawnZones = selected.ToList();
    }
    private void undo_Santa_FactoryNight_SpawnZones() => _santa_FactoryNight_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.factory4_night };
    private void default_Santa_FactoryNight_SpawnZones() => _santa_FactoryNight_SpawnZones = new List<string>();
    #endregion
    #region SantaInterchange
    private int _santa_Interchange_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.interchange;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.interchange);
            Data.bossConfig.gifter.spawnChance.interchange = value;
        }
    }
    private void undo_Santa_Interchange_SpawnChance() => _santa_Interchange_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.interchange;
    private void default_Santa_Interchange_SpawnChance() => _santa_Interchange_SpawnChance = 0;
    private List<string> _santa_Interchange_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.interchange.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.interchange = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.interchange);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.interchange = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.interchange);
            }
        }
    }
    private void On_Santa_Interchange_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Interchange_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Interchange_SpawnZones() => _santa_Interchange_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.interchange };
    private void default_Santa_Interchange_SpawnZones() => _santa_Interchange_SpawnZones = new List<string>();
    #endregion
    #region SantaLabs
    private int _santa_Labs_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.laboratory;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.laboratory);
            Data.bossConfig.gifter.spawnChance.laboratory = value;
        }
    }
    private void undo_Santa_Labs_SpawnChance() => _santa_Labs_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.laboratory;
    private void default_Santa_Labs_SpawnChance() => _santa_Labs_SpawnChance = 0;
    private List<string> _santa_Labs_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.laboratory.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.laboratory = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.laboratory);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.laboratory = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.laboratory);
            }
        }
    }
    private void On_Santa_Labs_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Labs_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Labs_SpawnZones() => _santa_Labs_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.laboratory };
    private void default_Santa_Labs_SpawnZones() => _santa_Labs_SpawnZones = new List<string>();
    #endregion
    #region SantaLighthouse
    private int _santa_Lighthouse_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.lighthouse;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.lighthouse);
            Data.bossConfig.gifter.spawnChance.lighthouse = value;
        }
    }
    private void undo_Santa_Lighthouse_SpawnChance() => _santa_Lighthouse_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.lighthouse;
    private void default_Santa_Lighthouse_SpawnChance() => _santa_Lighthouse_SpawnChance = 0;
    private List<string> _santa_Lighthouse_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.lighthouse.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.lighthouse = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.lighthouse);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.lighthouse = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.lighthouse);
            }
        }
    }
    private void On_Santa_Lighthouse_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Lighthouse_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Lighthouse_SpawnZones() => _santa_Lighthouse_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.lighthouse };
    private void default_Santa_Lighthouse_SpawnZones() => _santa_Lighthouse_SpawnZones = new List<string>();
    #endregion
    #region SantaReserve
    private int _santa_Reserve_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.rezervbase;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.rezervbase);
            Data.bossConfig.gifter.spawnChance.rezervbase = value;
        }
    }
    private void undo_Santa_Reserve_SpawnChance() => _santa_Reserve_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.rezervbase;
    private void default_Santa_Reserve_SpawnChance() => _santa_Reserve_SpawnChance = 0;
    private List<string> _santa_Reserve_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.rezervbase.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.rezervbase = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.rezervbase);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.rezervbase = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.rezervbase);
            }
        }
    }
    private void On_Santa_Reserve_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Reserve_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Reserve_SpawnZones() => _santa_Reserve_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.rezervbase };
    private void default_Santa_Reserve_SpawnZones() => _santa_Reserve_SpawnZones = new List<string>();
    #endregion
    #region SantaGroundZero
    private int _santa_GroundZero_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.sandbox;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.sandbox);
            Data.bossConfig.gifter.spawnChance.sandbox = value;
        }
    }
    private void undo_Santa_GroundZero_SpawnChance() => _santa_GroundZero_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.sandbox;
    private void default_Santa_GroundZero_SpawnChance() => _santa_GroundZero_SpawnChance = 0;
    private List<string> _santa_GroundZero_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.sandbox.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.sandbox = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.sandbox);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.sandbox = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.sandbox);
            }
        }
    }
    private void On_Santa_GroundZero_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_GroundZero_SpawnZones = selected.ToList();
    }
    private void undo_Santa_GroundZero_SpawnZones() => _santa_GroundZero_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.sandbox };
    private void default_Santa_GroundZero_SpawnZones() => _santa_GroundZero_SpawnZones = new List<string>();
    private int _santa_GroundZeroHigh_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.sandbox_high;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.sandbox_high);
            Data.bossConfig.gifter.spawnChance.sandbox_high = value;
        }
    }
    private void undo_Santa_GroundZeroHigh_SpawnChance() => _santa_GroundZeroHigh_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.sandbox_high;
    private void default_Santa_GroundZeroHigh_SpawnChance() => _santa_GroundZeroHigh_SpawnChance = 0;
    private List<string> _santa_GroundZeroHigh_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.sandbox_high.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.sandbox_high = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.sandbox_high);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.sandbox_high = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.sandbox_high);
            }
        }
    }
    private void On_Santa_GroundZeroHigh_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_GroundZeroHigh_SpawnZones = selected.ToList();
    }
    private void undo_Santa_GroundZeroHigh_SpawnZones() => _santa_GroundZeroHigh_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.sandbox_high };
    private void default_Santa_GroundZeroHigh_SpawnZones() => _santa_GroundZeroHigh_SpawnZones = new List<string>();
    #endregion
    #region SantaShoreline
    private int _santa_Shoreline_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.shoreline;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.shoreline);
            Data.bossConfig.gifter.spawnChance.shoreline = value;
        }
    }
    private void undo_Santa_Shoreline_SpawnChance() => _santa_Shoreline_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.shoreline;
    private void default_Santa_Shoreline_SpawnChance() => _santa_Shoreline_SpawnChance = 0;
    private List<string> _santa_Shoreline_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.shoreline.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.shoreline = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.shoreline);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.shoreline = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.shoreline);
            }
        }
    }
    private void On_Santa_Shoreline_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Shoreline_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Shoreline_SpawnZones() => _santa_Shoreline_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.shoreline };
    private void default_Santa_Shoreline_SpawnZones() => _santa_Shoreline_SpawnZones = new List<string>();
    #endregion
    #region SantaStreets
    private int _santa_Streets_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.tarkovstreets;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.tarkovstreets);
            Data.bossConfig.gifter.spawnChance.tarkovstreets = value;
        }
    }
    private void undo_Santa_Streets_SpawnChance() => _santa_Streets_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.tarkovstreets;
    private void default_Santa_Streets_SpawnChance() => _santa_Streets_SpawnChance = 0;
    private List<string> _santa_Streets_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.tarkovstreets.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.tarkovstreets = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.tarkovstreets);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.tarkovstreets = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.tarkovstreets);
            }
        }
    }
    private void On_Santa_Streets_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Streets_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Streets_SpawnZones() => _santa_Streets_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.tarkovstreets };
    private void default_Santa_Streets_SpawnZones() => _santa_Streets_SpawnZones = new List<string>();
    #endregion
    #region SantaWoods
    private int _santa_Woods_SpawnChance
    {
        get => Data.bossConfig.gifter.spawnChance.woods;
        set
        {
            Utils.UpdateView(value, OriginalConfig.bossConfig.gifter.spawnChance.woods);
            Data.bossConfig.gifter.spawnChance.woods = value;
        }
    }
    private void undo_Santa_Woods_SpawnChance() => _santa_Woods_SpawnChance = OriginalConfig.bossConfig.gifter.spawnChance.woods;
    private void default_Santa_Woods_SpawnChance() => _santa_Woods_SpawnChance = 0;
    private List<string> _santa_Woods_SpawnZones
    {
        get
        {
            List<string> listValues = Data.bossConfig.gifter.bossZone.woods.Split(',').ToList();
            return listValues;
        }
        set
        {
            if (!value.Any())
            {
                Data.bossConfig.gifter.bossZone.woods = "";
                Utils.UpdateView("", OriginalConfig.bossConfig.gifter.bossZone.woods);
            }
            else
            {
                string listConverted = string.Join(',', value).TrimStart(',');

                Data.bossConfig.gifter.bossZone.woods = listConverted;
                Utils.UpdateView(listConverted, OriginalConfig.bossConfig.gifter.bossZone.woods);
            }
        }
    }
    private void On_Santa_Woods_SpawnZonesChanged(IEnumerable<string> selected)
    {
        _santa_Woods_SpawnZones = selected.ToList();
    }
    private void undo_Santa_Woods_SpawnZones() => _santa_Woods_SpawnZones = new List<string> { OriginalConfig.bossConfig.gifter.bossZone.woods };
    private void default_Santa_Woods_SpawnZones() => _santa_Woods_SpawnZones = new List<string>();
    #endregion
    #endregion

    #region CASCADING PARAMETERS
    [CascadingParameter] public ABPSConfig.Shared.MainLayout? Layout { get; set; }
    #endregion
}